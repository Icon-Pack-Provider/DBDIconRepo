using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace IconPack.Helper
{
    public static class FilenameToInfo
    {
        private static Dictionary<string, IItemInfo> perksInfo => new Dictionary<string, IItemInfo>()
        {
            { "iconPerks_buckleUp", new PerkInfo("Buckle Up", "Ashley J. Williams") },
            { "iconPerks_flipFlop", new PerkInfo("Flip-flop", "Ashley J. Williams") },
            { "iconPerks_mettleOfMan", new PerkInfo("Mettle of Man", "Ashley J. Williams") },
            { "iconPerks_aceInTheHole", new PerkInfo("Ace in the Hole", "Ace Visconti") },
            { "iconPerks_adrenaline", new PerkInfo("Adrenaline", "Meg Thomas") },
            { "iconPerks_aftercare", new PerkInfo("Aftercare", "Jeffrey \"Jeff\" Johansen") },
            { "iconPerks_agitation", new PerkInfo("Agitation", "The Trapper") },
            { "iconPerks_alert", new PerkInfo("Alert", "Feng Min") },
            { "iconPerks_aNursesCalling", new PerkInfo("A Nurse's Calling", "The Nurse") },
            { "iconPerks_anyMeansNecessary", new PerkInfo("Any Means Necessary", "Yui Kimura") },
            { "iconPerks_appraisal", new PerkInfo("Appraisal", "Élodie Rakoto") },
            { "iconPerks_autodidact", new PerkInfo("Autodidact", "Adam Francis") },
			{ "iconPerks_babySitter", new PerkInfo("Baby Sitter", "Steve Harrington") },
			{ "iconPerks_balancedLanding", new PerkInfo("Balanced Landing", "Nea Karlsson") },
			{ "iconPerks_bamboozle", new PerkInfo("Bamboozle", "The Clown") },
			{ "iconPerks_BBQAndChili", new PerkInfo("Barbecue & Chili", "The Cannibal") },
			{ "iconPerks_beastOfPrey", new PerkInfo("Beast of Prey", "The Huntress") },
			{ "iconPerks_betterTogether", new PerkInfo("Better Together ", "Nancy Wheeler") },
			{ "iconPerks_BiteTheBullet", new PerkInfo("Bite the Bullet", "Leon Scott Kennedy") },
			{ "iconPerks_bitterMurmur", new PerkInfo("Bitter Murmur", null) },
			{ "iconPerks_blastMine", new PerkInfo("Blast Mine", "Jill Valentine") },
			{ "iconPerks_bloodEcho", new PerkInfo("Blood Echo", "The Oni") },
			{ "iconPerks_bloodhound", new PerkInfo("Bloodhound", "The Wraith") },
			{ "iconPerks_bloodPact", new PerkInfo("Blood Pact", "Cheryl Mason") },
			{ "iconPerks_bloodWarden", new PerkInfo("Blood Warden", "The Nightmare") },
			{ "iconPerks_boilOver", new PerkInfo("Boil Over", "Kate Denson") },
			{ "iconPerks_bond", new PerkInfo("Bond", "Dwight Fairfield") },
			{ "iconPerks_BoonCircleOfHealing", new PerkInfo("Boon: Circle of Healing", "Mikaela Reid") },
			{ "iconPerks_BoonDestroyer", new PerkInfo("Shattered Hope", null) },
			{ "iconPerks_BoonShadowStep", new PerkInfo("Boon: Shadow Step", "Mikaela Reid") },
			{ "iconPerks_borrowedTime", new PerkInfo("Borrowed Time", "William \"Bill\" Overbeck") },
			{ "iconPerks_botanyKnowledge", new PerkInfo("Botany Knowledge", "Claudette Morel") },
			{ "iconPerks_breakdown", new PerkInfo("Breakdown", "Jeffrey \"Jeff\" Johansen") },
			{ "iconPerks_breakout", new PerkInfo("Breakout", "Yui Kimura") },
			{ "iconPerks_brutalStrength", new PerkInfo("Brutal Strength", "The Trapper") },
			{ "iconPerks_builtToLast", new PerkInfo("Built to Last", "Felix Richter") },
			{ "iconPerks_callOfBrine", new PerkInfo("Call of Brine", "The Onryō") },
			{ "iconPerks_calmSpirit", new PerkInfo("Calm Spirit", "Jake Park") },
			{ "iconPerks_camaraderie", new PerkInfo("Camaraderie", "Steve Harrington") },
			{ "iconPerks_Clairvoyance", new PerkInfo("Clairvoyance", "Mikaela Reid") },
			{ "iconPerks_corruptIntervention", new PerkInfo("Corrupt Intervention", "The Plague") },
			{ "iconPerks_coulrophobia", new PerkInfo("Coulrophobia", "The Clown") },
			{ "iconPerks_Counterforce", new PerkInfo("Counterforce", "Jill Valentine") },
			{ "iconPerks_coupDeGrace", new PerkInfo("Coup de Grâce", "The Twins") },
			{ "iconPerks_cruelConfinement", new PerkInfo("Claustrophobia", null) },
			{ "iconPerks_danceWithMe", new PerkInfo("Dance With Me", "Kate Denson") },
			{ "iconPerks_darkDevotion", new PerkInfo("Dark Devotion", "The Plague") },
			{ "iconPerks_DarknessRevelated", new PerkInfo("Darkness Revealed", "The Dredge") },
			{ "iconPerks_darkSense", new PerkInfo("Dark Sense", null) },
			{ "iconPerks_darkTheory", new PerkInfo("Boon: Dark Theory", "Yoichi Asakawa") },
			{ "iconPerks_DeadHard", new PerkInfo("Dead Hard", "David King") },
			{ "iconPerks_Deadlock", new PerkInfo("Deadlock", "The Cenobite") },
			{ "iconPerks_deadManSwitch", new PerkInfo("Dead Man's Switch", "The Deathslinger") },
			{ "iconPerks_deathbound", new PerkInfo("Deathbound", "The Executioner") },
			{ "iconPerks_deception", new PerkInfo("Deception", "Élodie Rakoto") },
			{ "iconPerks_decisiveStrike", new PerkInfo("Decisive Strike", "Laurie Strode") },
			{ "iconPerks_deerstalker", new PerkInfo("Deerstalker", null) },
			{ "iconPerks_dejaVu", new PerkInfo("Déjà vu", null) },
			{ "iconPerks_deliverance", new PerkInfo("Deliverance", "Adam Francis") },
			{ "iconPerks_desperateMeasures", new PerkInfo("Desperate Measures", "Felix Richter") },
			{ "iconPerks_detectivesHunch", new PerkInfo("Detective's Hunch", "Detective David Tapp") },
			{ "iconPerks_devourHope", new PerkInfo("Hex: Devour Hope", "The Hag") },
			{ "iconPerks_discordance", new PerkInfo("Discordance", "The Legion") },
			{ "iconPerks_Dissolution", new PerkInfo("Dissolution", "The Dredge") },
			{ "iconPerks_distortion", new PerkInfo("Distortion", "Jeffrey \"Jeff\" Johansen") },
			{ "iconPerks_distressing", new PerkInfo("Distressing", null) },
			{ "iconPerks_diversion", new PerkInfo("Diversion", "Adam Francis") },
			{ "iconPerks_dragonsGrip", new PerkInfo("Dragon's Grip", "The Blight") },
			{ "iconPerks_dyingLight", new PerkInfo("Dying Light", "The Shape") },
			{ "iconPerks_empathicConnection", new PerkInfo("Empathic connection", "Yoichi Asakawa") },
			{ "iconPerks_empathy", new PerkInfo("Empathy", "Claudette Morel") },
			{ "iconPerks_enduring", new PerkInfo("Enduring", "The Hillbilly") },
			{ "iconPerks_eruption", new PerkInfo("Eruption", "The Nemesis") },
			{ "iconPerks_FastTrack", new PerkInfo("Fast Track", "Yun-Jin Lee") },
			{ "iconPerks_fireUp", new PerkInfo("Fire Up", "The Nightmare") },
			{ "iconPerks_fixated", new PerkInfo("Fixated", "Nancy Wheeler") },
			{ "iconPerks_Flashbang", new PerkInfo("Flashbang", "Leon Scott Kennedy") },
			{ "iconPerks_floodOfRage", new PerkInfo("Scourge Hook: Floods of Rage", "The Onryō") },
			{ "iconPerks_forcedPenance", new PerkInfo("Forced Penance", "The Executioner") },
			{ "iconPerks_forThePeople", new PerkInfo("For The People", "Zarina Kassir") },
			{ "iconPerks_franklinsLoss", new PerkInfo("Franklin's Demise", "The Cannibal") },
			{ "iconPerks_furtiveChase", new PerkInfo("Furtive Chase", "The Ghost Face") },
			{ "iconPerks_gearHead", new PerkInfo("Gearhead", "The Deathslinger") },
			{ "iconPerks_generatorOvercharge", new PerkInfo("Overcharge", "The Doctor") },
			{ "iconPerks_guardian", new PerkInfo("Guardian", null) },
			{ "iconPerks_hangmansTrick", new PerkInfo("Hangman's Trick", "The Pig") },
			{ "iconPerks_hatred", new PerkInfo("Rancor", "The Spirit") },
			{ "iconPerks_hauntedGround", new PerkInfo("Hex: Haunted Ground", "The Spirit") },
			{ "iconPerks_headOn", new PerkInfo("Head On", "Jane Romero") },
			{ "iconPerks_hexBloodFavor", new PerkInfo("Hex: Blood Favour", "The Blight") },
			{ "iconPerks_HexCrowdControl", new PerkInfo("Hex: Crowd Control", "The Trickster") },
			{ "iconPerks_HexPlaything", new PerkInfo("Hex: Plaything", "The Cenobite") },
			{ "iconPerks_hexRetribution", new PerkInfo("Hex: Retribution", "The Deathslinger") },
			{ "iconPerks_hexUndying", new PerkInfo("Hex: Undying", "The Blight") },
			{ "iconPerks_Hoarder", new PerkInfo("Hoarder", "The Twins") },
			{ "iconPerks_hope", new PerkInfo("Hope", null) },
			{ "iconPerks_HuntressLullaby", new PerkInfo("Hex: Huntress Lullaby", "The Huntress") },
			{ "iconPerks_hysteria", new PerkInfo("Hysteria", "The Nemesis") },
			{ "iconPerks_imAllEars", new PerkInfo("I'm All Ears", "The Ghost Face") },
			{ "iconPerks_infectiousFright", new PerkInfo("Infectious Fright", "The Plague") },
			{ "iconPerks_InnerFocus", new PerkInfo("Inner Focus", "Haddie Kaur") },
			{ "iconPerks_innerStrength", new PerkInfo("Inner Strength", "Nancy Wheeler") },
			{ "iconPerks_insidious", new PerkInfo("Insidious", null) },
			{ "iconPerks_ironGrasp", new PerkInfo("Iron Grasp", null) },
			{ "iconPerks_ironMaiden", new PerkInfo("Iron Maiden", "The Legion") },
			{ "iconPerks_ironWill", new PerkInfo("Iron Will", "Jake Park") },
			{ "iconPerks_kindred", new PerkInfo("Kindred", null) },
			{ "iconPerks_knockOut", new PerkInfo("Knock Out", "The Cannibal") },
			{ "iconPerks_leader", new PerkInfo("Leader", "Dwight Fairfield") },
			{ "iconPerks_leftBehind", new PerkInfo("Left Behind", "William \"Bill\" Overbeck") },
			{ "iconPerks_lethalPursuer", new PerkInfo("Lethal Pursuer", "The Nemesis") },
			{ "iconPerks_lightborn", new PerkInfo("Lightborn", "The Hillbilly") },
			{ "iconPerks_lightweight", new PerkInfo("Lightweight", null) },
			{ "iconPerks_lithe", new PerkInfo("Lithe", "Feng Min") },
			{ "iconPerks_luckyBreak", new PerkInfo("Lucky Break", "Yui Kimura") },
			{ "iconPerks_madGrit", new PerkInfo("Mad Grit", "The Legion") },
			{ "iconPerks_makeYourChoice", new PerkInfo("Make Your Choice", "The Pig") },
			{ "iconPerks_mercilessStrom", new PerkInfo("Merciless storm", "The Onryō") },
			{ "iconPerks_mindBreaker", new PerkInfo("Fearmonger", null) },
			{ "iconPerks_monitorAndAbuse", new PerkInfo("Monitor & Abuse", "The Doctor") },
			{ "iconPerks_monstrousShrine", new PerkInfo("Monstrous Shrine", null) },
			{ "iconPerks_nemesis", new PerkInfo("Nemesis", "The Oni") },
			{ "iconPerks_NoMither", new PerkInfo("No Mither", "David King") },
			{ "iconPerks_noOneEscapesDeath", new PerkInfo("Hex: No One Escapes Death", null) },
			{ "iconPerks_noOneLeftBehind", new PerkInfo("No One Left Behind", null) },
			{ "iconPerks_NoWayOut", new PerkInfo("No Way Out", "The Trickster") },
			{ "iconPerks_objectOfObsession", new PerkInfo("Object of Obsession", "Laurie Strode") },
			{ "iconPerks_offTheRecord", new PerkInfo("Off the Record", "Zarina Kassir") },
			{ "iconPerks_openHanded", new PerkInfo("Open-Handed", "Ace Visconti") },
			{ "iconPerks_Oppression", new PerkInfo("Oppression", "The Twins") },
			{ "iconPerks_overwelmingPresence", new PerkInfo("Overwelming Presence", "The Doctor") },
			{ "iconPerks_Overzealous", new PerkInfo("Overzealous", "Haddie Kaur") },
			{ "iconPerks_parentalGuidance", new PerkInfo("Parental Guidance", "Yoichi Asakawa") },
			{ "iconPerks_pharmacy", new PerkInfo("Pharmacy", "Quentin Smith") },
			{ "iconPerks_playWithYourFood", new PerkInfo("Play with Your Food", "The Shape") },
			{ "iconPerks_plunderersInstinct", new PerkInfo("Plunderer's Instinct", null) },
			{ "iconPerks_poised", new PerkInfo("Poised", "Jane Romero") },
			{ "iconPerks_popGoesTheWeasel", new PerkInfo("Pop Goes the Weasel", "The Clown") },
			{ "IconPerks_powerStruggle", new PerkInfo("Power Struggle", "Élodie Rakoto") },
			{ "iconPerks_predator", new PerkInfo("Predator", "The Wraith") },
			{ "iconPerks_premonition", new PerkInfo("Premonition", null) },
			{ "iconPerks_proveThyself", new PerkInfo("Prove Thyself", "Dwight Fairfield") },
			{ "iconPerks_pushThroughIt", new PerkInfo("Renewal", null) },
			{ "iconPerks_quickAndQuiet", new PerkInfo("Quick & Quite", "Meg Thomas") },
			{ "iconPerks_redHerring", new PerkInfo("Red Herring", "Zarina Kassir") },
			{ "iconPerks_rememberMe", new PerkInfo("Remember Me", "The Nightmare") },
			{ "iconPerks_repressedAlliance", new PerkInfo("Repressed Alliance", "Cheryl Mason") },
			{ "iconPerks_ResidualManifest", new PerkInfo("Residual Manifest", "Haddie Kaur") },
			{ "iconPerks_resilience", new PerkInfo("Resilience", null) },
			{ "iconPerks_Resurgence", new PerkInfo("Resurgence", "Jill Valentine") },
			{ "iconPerks_RookieSpirit", new PerkInfo("Rookie Spirit", "Leon Scott Kennedy") },
			{ "iconPerks_ruin", new PerkInfo("Hex: Ruin", "The Hag") },
			{ "iconPerks_saboteur", new PerkInfo("Saboteur", "Jake Park") },
			{ "iconPerks_saveTheBestForLast", new PerkInfo("Save the Best for Last", "The Shape") },
			{ "iconPerks_ScourgeHookGiftOfPain", new PerkInfo("Scourge Hook: Gift of Pain", "The Cenobite") },
			{ "iconPerks_secondWind", new PerkInfo("Second Wind", "Steve Harrington") },
			{ "iconPerks_selfCare", new PerkInfo("Self Care", "Claudette Morel") },
			{ "iconPerks_Self-Preservation", new PerkInfo("Self-Preservation", "Yun-Jin Lee") },
			{ "iconPerks_SepticTouch", new PerkInfo("Septic Touch", "The Dredge") },
			{ "iconPerks_shadowborn", new PerkInfo("Shadowborn", "The Wraith") },
			{ "iconPerks_situationalAwareness", new PerkInfo("Situational Awareness", null) },
			{ "iconPerks_slipperyMeat", new PerkInfo("Slippery Meat", null) },
			{ "iconPerks_sloppyButcher", new PerkInfo("Sloppy Butcher", null) },
			{ "iconPerks_smallGame", new PerkInfo("Small Game", null) },
			{ "iconPerks_SmashHit", new PerkInfo("Smash Hit", "Yun-Jin Lee") },
			{ "iconPerks_soleSurvivor", new PerkInfo("Sole Survivor", "Laurie Strode") },
			{ "iconPerks_solidarity", new PerkInfo("Solidarity", "Jane Romero") },
			{ "iconPerks_soulGuard", new PerkInfo("Soul Guard", "Cheryl Mason") },
			{ "iconPerks_spiesFromTheShadows", new PerkInfo("Spies from the Shadows", null) },
			{ "iconPerks_spineChill", new PerkInfo("Spine Chill", null) },
			{ "iconPerks_spiritFury", new PerkInfo("Spirit Fury", "The Spirit") },
			{ "iconPerks_sprintBurst", new PerkInfo("Sprint Burst", "Meg Thomas") },
			{ "iconPerks_stakeOut", new PerkInfo("Stake Out", "Detective David Tapp") },
			{ "iconPerks_Starstruck", new PerkInfo("Starstruck", "The Trickster") },
			{ "iconPerks_streetwise", new PerkInfo("Streetwise", "Nea Karlsson") },
			{ "iconPerks_stridor", new PerkInfo("Stridor", "The Nurse") },
			{ "iconPerks_surge", new PerkInfo("Jolt", null) },
			{ "iconPerks_surveillance", new PerkInfo("Surveillance", "The Pig") },
			{ "iconPerks_survivalInstincts", new PerkInfo("Inner Healing", null) },
			{ "iconPerks_technician", new PerkInfo("Technician", "Feng Min") },
			{ "iconPerks_tenacity", new PerkInfo("Tenacity", "Detective David Tapp") },
			{ "iconPerks_TerritorialImperative", new PerkInfo("Territorial Imperative", "The Huntress") },
			{ "iconPerks_thatanophobia", new PerkInfo("Thatanophobia", "The Nurse") },
			{ "iconPerks_theThirdSeal", new PerkInfo("Hex: The Third Seal", "The Hag") },
			{ "iconPerks_thisIsNotHappening", new PerkInfo("This is not Happening", null) },
			{ "iconPerks_thrillingTremors", new PerkInfo("Thrilling Tremors", "The Ghost Face") },
			{ "iconPerks_thrillOfTheHunt", new PerkInfo("Hex: Thrill of the Hunt", null) },
			{ "iconPerks_tinkerer", new PerkInfo("Tinkerer", "The Hillbilly") },
			{ "iconPerks_trailOfTorment", new PerkInfo("Trail of Torment", "The Executioner") },
			{ "iconPerks_unbreakable", new PerkInfo("Unbreakable", "William \"Bill\" Overbeck") },
			{ "iconPerks_unnervingPresence", new PerkInfo("Unnerving presence", "The Trapper") },
			{ "iconPerks_unrelenting", new PerkInfo("Unrelenting", null) },
			{ "iconPerks_upTheAnte", new PerkInfo("Up the Ante", "Ace Visconti") },
			{ "iconPerks_urbanEvasion", new PerkInfo("Urban Evasion", "Nea Karlsson") },
			{ "iconPerks_vigil", new PerkInfo("Vigil", "Quentin Smith") },
			{ "iconPerks_visionary", new PerkInfo("Visionary", "Felix Richter") },
			{ "iconPerks_wakeUp", new PerkInfo("Wake Up", "Quentin Smith") },
			{ "iconPerks_wellMakeIt", new PerkInfo("We'll Make it", null) },
			{ "iconPerks_WereGonnaLiveForever", new PerkInfo("We're Gonna Live Forever", "David King") },
			{ "iconPerks_whispers", new PerkInfo("Whispers", null) },
			{ "iconPerks_windowsOfOpportunity", new PerkInfo("Windows of Opportunity", "Kate Denson") },
			{ "iconPerks_zanshinTactics", new PerkInfo("Zanshin Tactics", "The Oni") },
			{ "T_iconPerks_BoonExponential", new PerkInfo("Boon: Exponential", "Jonah Vasquez") },
			{ "T_iconPerks_CorrectiveAction", new PerkInfo("Corrective Action", "Jonah Vasquez") },
			{ "T_iconPerks_grimEmbrace", new PerkInfo("Grim embrace", "The Artist") },
			{ "T_iconPerks_hexPentimento", new PerkInfo("Hex: Pentimento", "The Artist") },
			{ "T_iconPerks_Overcome", new PerkInfo("Overcome", "Jonah Vasquez") },
			{ "T_iconPerks_painResonance", new PerkInfo("Scourge Hook: Pain Resonance", "The Artist") }
		};

		private static Dictionary<string, string> portraitsInfo = new Dictionary<string, string>()
        {
			{"AF_charSelect_portrait", "Adam Francis" },
			{"AV_charSelect_portrait", "Ace Visconti" },
			{"BE_charSelect_portrait", "The Huntress" },
			{"BO_charSelect_portrait", "William \"Bill\" Overbeck" },
			{"CA_charSelect_portrait", "The Cannibal" },
			{"CM_charSelect_portrait", "Claudette Morel" },
			{"DF_charSelect_portrait", "Dwight Fairfield" },
			{"DK_charSelect_portrait", "David King" },
			{"DO_charSelect_portrait", "The Doctor" },
			{"FK_charSelect_portrait", "The Pig" },
			{"FM_charSelect_portrait", "Feng Min" },
			{"FS_charSelect_portrait", "Detective David Tapp" },
			{"GK_charSelect_portrait", "The Clown" },
			{"GS_charSelect_portrait", "Kate Denson" },
			{"HA_charSelect_portrait", "The Hag" },
			{"HB_charSelect_portrait", "The Hillbilly" },
			{"HK_charSelect_portrait", "The Spirit" },
			{"JP_charSelect_portrait", "Jake Park" },
			{"K20_charSelect_portrait", "The Executioner" },
			{"K21_charSelect_portrait", "The Blight" },
			{"K22_charSelect_portrait", "The Twins" },
			{"K23_charSelect_portrait", "The Trickster" },
			{"K24_charSelect_portrait", "The Nemesis" },
			{"K25_charSelect_portrait", "The Cenobite" },
			{"K27_charSelect_portrait", "The Onryō" },
			{"K28_charSelect_portrait", "The Dredge" },
			{"KK_charSelect_portrait", "The Legion" },
			{"KS_charSelect_portrait", "Jeffrey \"Jeff\" Johansen" },
			{"LS_charSelect_portrait", "Laurie Strode" },
			{"MK_charSelect_portrait", "The Plague" },
			{"MS_charSelect_portrait", "Jane Romero" },
			{"MS2_charSelect_portrait", "Ashley J. Williams" },
			{"MT_charSelect_portrait", "Meg Thomas" },
			{"NK_charSelect_portrait", "Nea Karlsson" },
			{"NR_charSelect_portrait", "The Nurse" },
			{"OK_charSelect_portrait", "The Ghost Face" },
			{"QF_charSelect_portrait", "Nancy Wheeler" },
			{"QK_charSelect_portrait", "The Demogorgon" },
			{"QM_charSelect_portrait", "Steve Harrington" },
			{"QS_charSelect_portrait", "Quentin Smith" },
			{"S22_charSelect_portrait", "Cheryl Mason" },
			{"S22J_charSelect_portrait", "James Sunderland" },
			{"S23_charSelect_portrait", "Felix Richter" },
			{"S24_charSelect_portrait", "Élodie Rakoto" },
			{"S25_charSelect_portrait", "Yun-Jin Lee" },
			{"S26_charSelect_portrait", "Jill Valentine" },
			{"S27_charSelect_portrait", "Leon Scott Kennedy" },
			{"S28_charSelect_portrait", "Mikaela Reid" },
			{"S30_charSelect_portrait", "Yoichi Asakawa" },
			{"S31_charSelect_portrait", "Haddie Kaur" },
			{"SD_charSelect_portrait", "The Nightmare" },
			{"SH_charSelect_portrait", "The Shape" },
			{"SK_charSelect_portrait", "The Oni" },
			{"SS_charSelect_portrait", "Yui Kimura" },
			{"T_K26_charSelect_portrait", "The Artist" },
			{"T_S29_charSelect_portrait", "Jonah Vasquez" },
			{"TR_charSelect_portrait", "The Trapper" },
			{"UK_charSelect_portrait", "The Deathslinger" },
			{"US_charSelect_portrait", "Zarina Kassir" },
			{"WR_charSelect_portrait", "The Wraith" }
		}

		private static Dictionary<string, string> survivorItemInfo = new Dictionary<string, string>()
		{
			{"iconItems_flashlight_anniversary2020", "Anniversary Flashlight" },
			{"iconItems_flashlight_anniversary2022", "Masquerade Flashlight" },
			{"iconItems_medkit_anniversary2020", "Anniversary Med-Kit" },
			{"iconItems_medkit_anniversary2022", "Masquerade Med-Kit" },
			{"iconItems_partyPopper", "Third Year Party Starter" },
			{"iconItems_toolbox_anniversary2021", "Anniversary Toolbox" },
			{"iconItems_toolbox_anniversary2022", "Masquerade Toolbox" },
			{"iconItems_flashlightHalloween", "Will O' Wisp" },
			{"iconItems_medkitHalloween", "All Hallows' Eve Lunchbox" },
			{"iconItems_LimitedFragileMirror", "Pocket Mirror" },
			{"iconItems_LimitedItemVaccine", "Vaccine" },
			{"iconItems_LimitedLamentConfiguration", "Lament Configuration" },
			{"iconItems_LimitedRepairedMirror", "Pocket Mirror" },
			{"iconItems_LimitedVhsTape", "VHS Tape" },
			{"iconItems_flashbangGrenade", "Flash Granade" },
			{"iconItems_toolboxLunar", "Festive Toolbox" },
			{"iconItems_winterEventFirecracker", "Winter Party Starter" },
			{"iconItems_brokenKey", "Broken Key" },
			{"iconItems_chineseFirecracker", "Chinese Firecracker" },
			{"iconItems_dullKey", "Dull Key" },
			{"iconItems_firstAidKit", "First Aid Kit" },
			{"iconItems_flashlight", "Flashlight" },
			{"iconItems_flashlightSport", "Sport Flashlight" },
			{"iconItems_flashlightUtility", "Utility Flashlight" },
			{"iconItems_key", "Skeleton Key" },
			{"iconItems_map", "Map" },
			{"iconItems_medkit", "Emergency Med-Kit" },
			{"iconItems_rainbowMap", "Rainbow Map" },
			{"iconItems_rangersAidKit", "Ranger Med-Kit" },
			{"iconItems_rundownAidKit", "Camping Aid Kit" },
			{"iconItems_toolbox", "Toolbox" },
			{"iconItems_toolboxAlexs", "Alex's Toolbox" },
			{"iconItems_toolboxCommodious", "Commodious Toolbox" },
			{"iconItems_toolboxEngineers", "Engineer's Toolbox" },
			{"iconItems_toolboxMechanics", "Mechanic's Toolbox" },
			{"iconItems_toolboxWornOut", "Worn-Out Tools" }
		};

		private static Dictionary<string, IItemInfo> killerPowerInfo = new Dictionary<string, IItemInfo>()
		{
			{"iconPowers_axe", new KillerPowerInfo("Hunting Hatchets", "The Huntress") },
			{"iconPowers_bell", new KillerPowerInfo("Wailing Bell", "The Wraith") },
			{"iconPowers_blackenedCatalyst", new KillerPowerInfo("Blackened Catalyst", "The Hag") },
			{"iconPowers_bloodBond_01", new KillerPowerInfo("Blood Bond: Charlotte", "The Twins") },
			{"iconPowers_bloodBond_02", new KillerPowerInfo("Blood Bond: Victor", "The Twins") },
			{"iconPowers_breath", new KillerPowerInfo("Spencer's Last Breath", "The Nurse") },
			{"iconPowers_bubbasChainsaw", new KillerPowerInfo("Bubba's Chainsaw", "The Cannibal") },
			{"iconPowers_cartersSpark", new KillerPowerInfo("Carter's Spark", "The Doctor") },
			{"iconPowers_chainsaw", new KillerPowerInfo("Chainsaw", "The Hillbilly") },
			{"iconPowers_delugeOfFear", new KillerPowerInfo("Deluge of Fear", "The Onryō") },
			{"iconPowers_delugeOfFear2", new KillerPowerInfo("Deluge of Fear: Manifested", "The Onryō") },
			{"iconPowers_detention", new KillerPowerInfo("Detention", "The Teacher") },
			{"iconPowers_dreamMaster", new KillerPowerInfo("Dream Demon", "The Nightmare") },
			{"iconPowers_feralFrenzy", new KillerPowerInfo("Feral Frenzy", "The Legion") },
			{"iconPowers_gasBomb", new KillerPowerInfo("The Afterpiece Tonic", "The Clown") },
			{"iconPowers_gasBomb2", new KillerPowerInfo("The Afterpiece Tonic: Antidote", "The Clown") },
			{"iconPowers_ghostPower_activated", new KillerPowerInfo("Night Shroud: Activated", "The Ghost Face") },
			{"iconPowers_ghostPower_available", new KillerPowerInfo("Night Shroud", "The Ghost Face") },
			{"iconPowers_huntingHatchets", new KillerPowerInfo("Hunting Hatchets", "The Huntress") },
			{"iconPowers_K21", new KillerPowerInfo("Blighted Corruption", "The Blight") },
			{"iconPowers_ofTheAbyss", new KillerPowerInfo("Of the Abyss", "The Demogorgon") },
			{"iconPowers_reverseBearTrap", new KillerPowerInfo("Jigsaw's Baptism", "The Pig") },
			{"iconPowers_Showstopper_01", new KillerPowerInfo("Showstopper", "The Trickster") },
			{"iconPowers_Showstopper_02", new KillerPowerInfo("Showstopper: The Main Event", "The Trickster") },
			{"iconPowers_Showstopper_03", new KillerPowerInfo("Showstopper: No Blade", "The Trickster") },
			{"iconPowers_stalker1", new KillerPowerInfo("Evil Within I", "The Shape") },
			{"iconPowers_stalker2", new KillerPowerInfo("Evil Within II", "The Shape") },
			{"iconPowers_stalker3", new KillerPowerInfo("Evil Within III", "The Shape") },
			{"iconPowers_stalker3a", new KillerPowerInfo("Evil Within III", "The Shape") },
			{"iconPowers_summonsOfPain", new KillerPowerInfo("Summons of Pain", "The Cenobite") },
			{"iconPowers_Tantrum", new KillerPowerInfo("Chainsaw Sweep", "The Cannibal") },
			{"iconPowers_trap", new KillerPowerInfo("Bear Trap", "The Trapper") },
			{"iconPowers_T-virus1", new KillerPowerInfo("T-VIRUS MUTATION RATE 1", "The Nemesis") },
			{"iconPowers_T-virus2", new KillerPowerInfo("T-VIRUS MUTATION RATE 2", "The Nemesis") },
			{"iconPowers_T-virus3", new KillerPowerInfo("T-VIRUS MUTATION RATE 3", "The Nemesis") },
			{"iconPowers_UK", new KillerPowerInfo("The Redeemer", "The Deathslinger") },
			{"iconPowers_UK_chainBreak", new KillerPowerInfo("The Redeemer", "The Deathslinger") },
			{"iconPowers_vilePurge", new KillerPowerInfo("Vile Purge", "The Plague") },
			{"iconPowers_Wales_ritesOfJudgement", new KillerPowerInfo("Rites of Judgement", "The Executioner") },
			{"iconPowers_yamaokasHaunting", new KillerPowerInfo("Yamaoka's Haunting", "The Spirit") },
			{"iconPowers_yamaokasWrath", new KillerPowerInfo("Yamaoka's Wrath", "The Oni") },
			{"iconPowers_yamaokasWrath_demon", new KillerPowerInfo("Yamaoka's Wrath: Blood Fury", "The Oni") },
			{"T_iconPowers_birdsOfTorment", new KillerPowerInfo("Birds of Torment", "The Artist") },
			{"T_iconPowers_ReignofDarkness", new KillerPowerInfo("Reign of Darkness", "The Dredge") }
		};

		private static Dictionary<string, IItemInfo> survivorItemAddonsInfo = new Dictionary<string, IItemInfo>()
		{
			//Survivor item add-ons
			{"iconAddon_brokenFlashlightBulb", new AddOnsInfo("Broken Bulb", "Flashlight") },
			{"iconAddon_battery", new AddOnsInfo("Battery", "Flashlight") },
			{"iconAddon_focusLens", new AddOnsInfo("Focus Lens", "Flashlight") },
			{"iconAddon_heavyDutyBattery", new AddOnsInfo("Heavy Duty Battery", "Flashlight") },
			{"iconAddon_highEndSapphireLens", new AddOnsInfo("High-End Sapphire Lens", "Flashlight") },
			{"iconAddon_intenseHalogen", new AddOnsInfo("Intense Halogen", "Flashlight") },
			{"iconAddon_leatherGrip", new AddOnsInfo("Leather Grip", "Flashlight") },
			{"iconAddon_longLifeBattery", new AddOnsInfo("Long Life Battery", "Flashlight") },
			{"iconAddon_oddBulb", new AddOnsInfo("Odd Bulb", "Flashlight") },
			{"iconAddon_powerBulb", new AddOnsInfo("Power Bulb", "Flashlight") },
			{"iconAddon_rubberGrip", new AddOnsInfo("Rubber Grip", "Flashlight") },
			{"iconAddon_threadedFilament", new AddOnsInfo("Low Amp Filament", "Flashlight") },
			{"iconAddon_tirOptic", new AddOnsInfo("TIR Optic", "Flashlight") },
			{"iconAddon_wideLens", new AddOnsInfo("Wide Lens", "Flashlight") },
			{"iconAddon_bloodAmber", new AddOnsInfo("Blood Amber", "Key") },
			{"iconAddon_milkyGlass", new AddOnsInfo("Milky Glass", "Key") },
			{"iconAddon_prayerBeads", new AddOnsInfo("Prayer Beads", "Key") },
			{"iconAddon_prayerRope", new AddOnsInfo("Prayer Rope", "Key") },
			{"iconAddon_scratchedPearl", new AddOnsInfo("Scratched Pearl", "Key") },
			{"iconAddon_tokenErroded", new AddOnsInfo("Eroded Token", "Key") },
			{"iconAddon_tokenGold", new AddOnsInfo("Gold Token", "Key") },
			{"iconAddon_uniqueRing", new AddOnsInfo("Unique Wedding Ring", "Key") },
			{"iconAddon_weavedRing", new AddOnsInfo("Weaved Ring", "Key") },
			{"iconAddon_beadCrystal", new AddOnsInfo("Crystal Bead", "Map") },
			{"iconAddon_beadGlass", new AddOnsInfo("Glass Bead", "Map") },
			{"iconAddon_mapAddendum", new AddOnsInfo("Map Addendum", "Map") },
			{"iconAddon_retardantJelly", new AddOnsInfo("Retardant Jelly", "Map") },
			{"iconAddon_ropeBlack", new AddOnsInfo("Black Silk Cord", "Map") },
			{"iconAddon_ropeRed", new AddOnsInfo("Red Twine", "Map") },
			{"iconAddon_ropeYellow", new AddOnsInfo("Yellow Wire", "Map") },
			{"iconAddon_stampOdd", new AddOnsInfo("Odd Stamp", "Map") },
			{"iconAddon_stampUnusual", new AddOnsInfo("Unusual Stamp", "Map") },
			{"iconAddon_blightedSyringe", new AddOnsInfo("Refined Serum", "Med-Kit") },
			{"iconAddon_abdominalDressing", new AddOnsInfo("Abdominal Dressing", "Med-Kit") },
			{"iconAddon_bandages", new AddOnsInfo("Bandages", "Med-Kit") },
			{"iconAddon_butterflyTape", new AddOnsInfo("Butterfly Tape", "Med-Kit") },
			{"iconAddon_gauseRoll", new AddOnsInfo("Gauze Roll", "Med-Kit") },
			{"iconAddon_gelDressings", new AddOnsInfo("Gel Dressings", "Med-Kit") },
			{"iconAddon_gloves", new AddOnsInfo("Rubber Gloves", "Med-Kit") },
			{"iconAddon_needAndThread", new AddOnsInfo("Needle & Thread", "Med-Kit") },
			{"iconAddon_scissors", new AddOnsInfo("Medical Scissors", "Med-Kit") },
			{"iconAddon_selfAdherentWrap", new AddOnsInfo("Self Adherent Wrap", "Med-Kit") },
			{"iconAddon_sponge", new AddOnsInfo("Sponge", "Med-Kit") },
			{"iconAddon_spoolOfWire", new AddOnsInfo("Wire Spool", "Med-Kit") },
			{"iconAddon_springClamp", new AddOnsInfo("Spring Clamp", "Med-Kit") },
			{"iconAddon_stypticAgent", new AddOnsInfo("Styptic Agent", "Med-Kit") },
			{"iconAddon_surgicalSuture", new AddOnsInfo("Surgical Suture", "Med-Kit") },
			{"iconAddon_syringe", new AddOnsInfo("Anti-Haemorrhagic Syringe", "Med-Kit") },
			{"iconAddon_brandNewPart", new AddOnsInfo("Brand New Part", "Toolbox") },
			{"iconAddon_cleanRag", new AddOnsInfo("Clean Rag", "Toolbox") },
			{"iconAddon_cuttingWire", new AddOnsInfo("Cutting Wire", "Toolbox") },
			{"iconAddon_gripWrench", new AddOnsInfo("Grip Wrench", "Toolbox") },
			{"iconAddon_instructions", new AddOnsInfo("Instructions", "Toolbox") },
			{"iconAddon_metalSaw", new AddOnsInfo("Hacksaw", "Toolbox") },
			{"iconAddon_protectiveGloves", new AddOnsInfo("Protective Gloves", "Toolbox") },
			{"iconAddon_scraps", new AddOnsInfo("Scraps", "Toolbox") },
			{"iconAddon_socketSwivels", new AddOnsInfo("Socket Swivels", "Toolbox") }
		};

		//TODO:Killer add-ons
    }

    public interface IItemInfo
    {
        string? Name { get; set; }
    }

    public class PerkInfo : IItemInfo
    {
        public PerkInfo(string? name, string? owner)
        {
            Name = name;
            if (owner is not null)
                PerkOwner = owner;
        }

        public string? Name { get; set; }

        public string? PerkOwner { get; init; }
    }

    public class KillerPowerInfo : IItemInfo
    {
		public KillerPowerInfo(string? name, string? owner)
        {
			Name = name;
			if (owner is not null)
				PowerOwner = owner;
        }

		public string? Name { get; set; }
		public string? PowerOwner { get; set; }
    }

    public class AddOnsInfo : IItemInfo
    {
		public AddOnsInfo(string? name, string? forItem)
        {
			Name = name;
			For = forItem;
			Owner = null;
        }

		public AddOnsInfo(string? name, string? forPower, string? owner)
        {
			Name = name;
			For = forPower;
			Owner = owner;
        }

		public string? Name { get; set; }
		public string? For { get; set; }
		public string? Owner { get; set; }
    }
}

<Page x:Class="DBDIconRepo.Views.UploadPack"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DBDIconRepo.Views"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:vm="clr-namespace:DBDIconRepo.ViewModel"
      xmlns:cv="clr-namespace:DBDIconRepo.Converters"
      mc:Ignorable="d" Name="rootPage"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="UploadPack">
    <Page.DataContext>
        <vm:UploadPackViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <Page.Resources>
        <DataTemplate x:Key="IconPackIconDisplay">
            <Image Width="100" Height="100" Source="{Binding ImagePreviewSource}">
                <ToolTipService.ToolTip>
                    <TextBlock Text="{Binding Tooltip.Name}"/>
                </ToolTipService.ToolTip>
            </Image>
        </DataTemplate>
        <DataTemplate x:Key="IconPackBannerDisplay">
            <Image Height="112" Margin="-2" Source="{Binding ImagePreviewSource}"/>
        </DataTemplate>
        <DataTemplate x:Key="PackPlaceholderBannerDisplay">
            <Image Height="112" Margin="-2" Source="pack://application:,,,/Resources/bannerHolder.png"/>
        </DataTemplate>
        <local:IconPreviewTemplateSelector 
            x:Key="iconPreviewTemplateSelector"
            LocalIconDisplay="{StaticResource IconPackIconDisplay}"
            LocalBannerDisplay="{StaticResource IconPackBannerDisplay}"
            PlaceholderBannerDisplay="{StaticResource PackPlaceholderBannerDisplay}"/>

        <cv:BoolToVisibility x:Key="boolToVisibility"/>
        <cv:NullableBoolToVisibility x:Key="nullableBoolForcedVisibility"/>
        <cv:FilePathToLocalImageConverter x:Key="fileToLocalImage"/>
        <cv:UploadableFileOrFolderConverter x:Key="fileOrFolder"/>
        <cv:EnumPreviewOptionToIntConverter x:Key="PreviewOptionToInt"/>
        
        <Image x:Key="menuIconLoader" x:Shared="False"
               Source="{Binding FilePath, Converter={StaticResource fileToLocalImage}}"/>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DefaultMenuItemStyle}" x:Key="menuForAdding">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=., Converter={StaticResource fileOrFolder}}" Value="True">
                    <Setter Property="ItemsSource" Value="{Binding SubItems}"/>
                    <Setter Property="Visibility" Value="{Binding IsSelected, Converter={StaticResource nullableBoolForcedVisibility}}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=., Converter={StaticResource fileOrFolder}}"
                             Value="False">
                    <Setter Property="Icon" Value="{StaticResource menuIconLoader}"/>
                    <Setter Property="Command" Value="{Binding DataContext.AddThisIconAsFixedIconsCommand, Source={x:Reference rootPage}}"/>
                    <Setter Property="CommandParameter" Value="{Binding Path=.}"/>
                    <Setter Property="Visibility" Value="{Binding IsSelected, Converter={StaticResource boolToVisibility}}"/>
                </DataTrigger>
            </Style.Triggers>

            <Setter Property="Header" Value="{Binding DisplayName}"/>
        </Style>
        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DefaultMenuItemStyle}"
               x:Key="menuForRemoving">
            <Setter Property="Header" Value="{Binding DisplayName}"/>
            <Setter Property="Visibility" Value="{Binding IsSelected,Mode=OneWay, Converter={StaticResource boolToVisibility}}"/>
            <Setter Property="Icon" Value="{StaticResource menuIconLoader}"/>
            <Setter Property="Command" Value="{Binding DataContext.RemoveThisIconFromFixedIconsCommand, Source={x:Reference rootPage}}"/>
            <Setter Property="CommandParameter" Value="{Binding Path=.}"/>
        </Style>
        <Style TargetType="ui:FontIcon">
            <Setter Property="Foreground" Value="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="Margin" Value="2,0"/>
        </Style>
    </Page.Resources>

    <Grid Margin="-12">
        <!-- First page -->
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                    Visibility="{Binding ShowOnSetWorkDirectoryAndInvalidWorkDirectory}">
            <Button Width="128" Height="128" HorizontalAlignment="Center"
                    Command="{Binding SetWorkingDirectoryCommand}"
                    Margin="12">
                <ui:FontIcon Glyph="&#xE197;" FontSize="64"/>
            </Button>
            <TextBlock Text="Select folder to upload" HorizontalAlignment="Center"
                       FontSize="24"
                       Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                       Visibility="{Binding ShowOnSetWorkDirectory}"/>
            <TextBlock HorizontalAlignment="Center"
                       FontSize="24" 
                       TextAlignment="Center"
                       Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                       Visibility="{Binding ShowOnInvalidWorkDirectory, Mode=OneWay}">
                No icons found on directory
                <LineBreak/>Try other folder?
            </TextBlock>
        </StackPanel>

        <Grid Visibility="{Binding ShowOnPreparingPack}">
            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Orientation="Vertical">
                <ui:ProgressRing Width="64" Height="64" IsActive="True"/>
                <TextBlock Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                           FontSize="24"
                           Text="Checking for valid icons"/>
            </StackPanel>
        </Grid>

        <Grid Visibility="{Binding ShowOnSelectIcons}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <HierarchicalDataTemplate x:Key="folderTemplate"
                                          DataType="{x:Type vm:IUploadableItem}" 
                                          ItemsSource="{Binding SubItems, Mode=OneWay}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsSelected}">
                            <CheckBox.Content>
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding DisplayName}"/><LineBreak/>
                                    <Run FontSize="12" Text="{Binding Path=DataContext.WorkingDirectory,
                                        RelativeSource={RelativeSource AncestorType={x:Type Page}}}"/><Run Text="{Binding SubFolderDisplay, Mode=OneWay}"/>\<Run FontSize="12" Text="{Binding Name}"/>
                                </TextBlock>
                            </CheckBox.Content>
                        </CheckBox>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate x:Key="fileTemplate"
                                          DataType="{x:Type vm:IUploadableItem}">
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsSelected}">
                            <CheckBox.Content>
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding DisplayName}"/><LineBreak/>
                                    <Run FontSize="12" Text="{Binding FilePath}"/>
                                </TextBlock>
                            </CheckBox.Content>
                        </CheckBox>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <local:UploadItemTemplator x:Key="itemTemplates"
                                           UploadableFolderTemplator="{StaticResource folderTemplate}"
                                           UploadableItemTemplator="{StaticResource fileTemplate}"/>
            </Grid.Resources>
            <TreeView ItemsSource="{Binding Uploadables}" ItemTemplateSelector="{StaticResource itemTemplates}">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource DefaultTreeViewItemStyle}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpand, Mode=TwoWay}"/>
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>

            <ui:CommandBar Grid.Row="1" DefaultLabelPosition="Right">
                <ui:CommandBar.Content>
                    <ui:CommandBar DefaultLabelPosition="Right">
                        <ui:AppBarButton Label="Select other folder" Icon="Back" Command="{Binding CancelSelectionRevertCommand}"/>
                    </ui:CommandBar>
                </ui:CommandBar.Content>
                <ui:AppBarButton Label="Expand all" Command="{Binding ExpandAllFolderCommand}">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon Glyph="&#xE740;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarButton Label="Collapsed all" Command="{Binding CollapseAllFolderCommand}">
                    <ui:AppBarButton.Icon>
                        <ui:FontIcon Glyph="&#xE73F;"/>
                    </ui:AppBarButton.Icon>
                </ui:AppBarButton>
                <ui:AppBarSeparator/>
                <ui:AppBarButton Label="Select all" Icon="SelectAll" Command="{Binding SelectAllItemCommand}"/>
                <ui:AppBarButton Label="Deselect all" Icon="ClearSelection" Command="{Binding UnSelectAllItemCommand}"/>
                <ui:AppBarSeparator/>
                <ui:AppBarButton Label="Refresh" Icon="Refresh" Command="{Binding DetermineUploadableItemsCommand}"/>
                <ui:AppBarSeparator/>
                <ui:AppBarButton Label="Continue" Icon="Forward" Command="{Binding FinishSelectionCommand}"/>
            </ui:CommandBar>
        </Grid>
        
        <ScrollViewer HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      Visibility="{Binding ShowOnFillDetail}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Fill in the detail of the pack:" 
                               Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                               FontSize="32" FontWeight="Bold" Margin="0,4,0,12"/>

                    <TextBox ui:ControlHelper.Header="Pack name"
                             ui:ControlHelper.PlaceholderText="enter pack name here"
                             Text="{Binding RepoDisplayName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                    <TextBlock Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}">
                        The pack will be upload to:
                        <LineBreak/><Hyperlink>https://www.github.com/<Run Text="{Binding Config.GitUsername}"/>/<Run Text="{Binding RepositoryOnGitName, Mode=OneWay}"/></Hyperlink>
                    </TextBlock>
                </StackPanel>

                <TextBox ui:ControlHelper.Header="Pack description"
                         Grid.Row="1" Margin="0,5"
                         Text="{Binding RepoDescription, Mode=TwoWay}"
                         ui:ControlHelper.PlaceholderText="enter a short description about this pack here"/>
                
                <StackPanel Grid.Row="2" Orientation="Vertical"
                            Margin="0,4,0,8">
                    <CheckBox Content="Allow pack addtional infos"
                              IsChecked="{Binding AllowPackMetadata, Mode=TwoWay}"/>
                    <TextBlock Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}">
                        Allow app to put other files beside icons onto repo
                        <LineBreak/>such as pack.json and .banner.png
                    </TextBlock>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Grid.Row="3">
                    <ComboBox IsSynchronizedWithCurrentItem="True"
                              IsEnabled="{Binding CanSelectPreviewOption}"
                              SelectedIndex="{Binding PreviewOption, Mode=TwoWay, Converter={StaticResource PreviewOptionToInt}}"
                              ui:ControlHelper.Header="Pack preview">
                        <ComboBoxItem Selector.IsSelected="True" Content="User defined set of icons"/>
                        <ComboBoxItem Content="Fixed set of icons"/>
                        <ComboBoxItem Content="Banner" Visibility="{Binding CanSetBannerAsPackPreview}"/>
                    </ComboBox>
                    <Button Content="{Binding BannerLocatorContext}"
                            Margin="5,0" d:Content="Set banner"
                            VerticalAlignment="Bottom"
                            Visibility="{Binding ShowBannerLocatorButton}"
                            Command="{Binding GrabPathForPackBannerCommand}"/>
                    <Button Content="Remove banner"
                            Visibility="{Binding IsBannerNowExist, Converter={StaticResource boolToVisibility}}"
                            VerticalAlignment="Bottom"
                            Margin="5,0"
                            Command="{Binding RemoveBannerCommand}"/>
                    <Button VerticalAlignment="Bottom" Margin="5,0">
                        <ui:FontIcon Glyph="&#xE11B;" />
                        <Button.ToolTip>
                            <ToolTip>
                                <TextBlock Text="{Binding PreviewOptionExplainer}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                            </ToolTip>
                        </Button.ToolTip>
                        <ui:FlyoutService.Flyout>
                            <ui:Flyout Placement="BottomEdgeAlignedLeft">
                                <TextBlock Text="{Binding PreviewOptionExplainer}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                            </ui:Flyout>
                        </ui:FlyoutService.Flyout>
                    </Button>
                </StackPanel>

                <!--Preview-->
                <Grid Grid.Row="4"
                      HorizontalAlignment="Left"
                      Margin="0,12">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Rectangle Width="480" Fill="DimGray" Opacity="0.5"
                               Grid.RowSpan="5" Margin="-12,-6"/>
                    <!--Banner preview-->
                    <ui:ListView ScrollViewer.CanContentScroll="False"
                                 MinHeight="112"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 HorizontalContentAlignment="Center"
                                 IsSelectionEnabled="False" Focusable="False"
                                 ItemTemplateSelector="{StaticResource iconPreviewTemplateSelector}"
                                 ItemsSource="{Binding PreviewSources, Mode=OneWay}">
                        <ui:ListView.ItemContainerStyle>
                            <Style TargetType="ui:ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="6"/>
                                <Setter Property="Focusable" Value="False"/>
                            </Style>
                        </ui:ListView.ItemContainerStyle>
                        <ui:ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <UniformGrid Rows="1"/>
                            </ItemsPanelTemplate>
                        </ui:ListView.ItemsPanel>
                    </ui:ListView>

                    <TextBlock Text="{Binding RepoDisplayName}" Grid.Row="1" HorizontalAlignment="Center"    
                               Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                               FontSize="20" FontWeight="Bold"
                               Margin="5,12"/>

                    <TextBlock HorizontalAlignment="Left" Grid.Row="2" FontSize="14" Margin="12,0" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}">
                                Author: <Hyperlink><Run Text="{Binding Config.GitUsername}"/></Hyperlink>
                    </TextBlock>

                    <StackPanel Orientation="Horizontal" Margin="12,4" Grid.Row="3">
                        <TextBlock Text="Content: " FontSize="14" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                        <ui:FontIcon Glyph="&#xE18A;" FontFamily="Segoe MDL2 Assets" Margin="0,0,4,0" ToolTip="This icon pack contain perks icon" Visibility="{Binding ThisWillHavePerks}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain portraits icon" Visibility="{Binding ThisWillHavePortraits}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain killer powers icon" Visibility="{Binding ThisWillHavePowers}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain survivor items icon" Visibility="{Binding ThisWillHaveItems}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain power/item addons icon" Visibility="{Binding ThisWillHaveAddons}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain status effects icon" Visibility="{Binding ThisWillHaveStatus}"/>
                        <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" ToolTip="This icon pack contain offerings icon" Visibility="{Binding ThisWillHaveOfferings}"/>
                    </StackPanel>
                </Grid>
                <StackPanel Grid.Row="4" Orientation="Vertical"
                            Margin="490,12,0,0"
                            Visibility="{Binding ShowOnFixedIconPreviewOption}">
                    <ui:AppBarButton Label="Add" Icon="Add" IsEnabled="{Binding AllowAddingFixedIcon}"
                                     LabelPosition="Default" Click="OpenAttachedFlyout">
                        <ui:FlyoutBase.AttachedFlyout>
                            <ui:MenuFlyout>
                                <!--Fix icon only show on last one-->
                                <MenuItem Header="Icons" ItemsSource="{Binding Uploadables}"
                                          ItemContainerStyle="{StaticResource menuForAdding}">
                                    <MenuItem.Icon>
                                        <ui:FontIcon Glyph="&#xE155;"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Random icon" Command="{Binding AddRandomFixedIconsCommand}">
                                    <MenuItem.Icon>
                                        <ui:SymbolIcon Symbol="Refresh"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ui:MenuFlyout>
                        </ui:FlyoutBase.AttachedFlyout>
                    </ui:AppBarButton>
                    <ui:AppBarButton Label="Remove" Icon="Remove" LabelPosition="Default" 
                                     Visibility="{Binding ShowOnFixedIconsHaveRemovableIcon}"
                                     Click="OpenAttachedFlyout">
                        <ui:FlyoutBase.AttachedFlyout>
                            <ui:MenuFlyout>
                                <MenuItem Header="Icons:" ItemsSource="{Binding FixedIcons}"
                                          ItemContainerStyle="{StaticResource menuForRemoving}">
                                    <MenuItem.Icon>
                                        <ui:FontIcon Glyph="&#xE155;"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="All" Command="{Binding RemoveAllFixedIconsCommand}">
                                    <MenuItem.Icon>
                                        <ui:FontIcon Glyph="&#xE106;"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ui:MenuFlyout>
                        </ui:FlyoutBase.AttachedFlyout>
                    </ui:AppBarButton>
                </StackPanel>
                
                <StackPanel Orientation="Vertical" 
                            Grid.Row="5"
                            HorizontalAlignment="Stretch"
                            Margin="0,12">
                    <Button Content="Upload"
                            Padding="16,8"
                            VerticalContentAlignment="Center"
                            Visibility="{Binding IsNotUploadingPackRightNow}"
                            Command="{Binding UploadNewIconPackCommand}"/>
                    <StackPanel Orientation="Horizontal" 
                                Visibility="{Binding IsUploadingPackRightNow}">
                        <ui:ProgressRing Width="32" Height="32"/>
                        <TextBlock Text="Uplading..." VerticalAlignment="Center" Margin="4,0" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                    </StackPanel>
                    <ScrollViewer VerticalScrollBarVisibility="Disabled"
                                  HorizontalScrollBarVisibility="Disabled">
                        <TextBlock Text="{Binding UploadProgresses}" Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
                    </ScrollViewer>
                </StackPanel>
            </Grid>
        </ScrollViewer>        
    </Grid>
</Page>

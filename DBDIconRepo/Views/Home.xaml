<Page x:Class="DBDIconRepo.Views.Home"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:DBDIconRepo.Views"
      xmlns:convert="clr-namespace:DBDIconRepo.Converters"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
      xmlns:vm="clr-namespace:DBDIconRepo.ViewModel"
      mc:Ignorable="d" SizeChanged="SizeTrigger"
      Title="Dead by daylight: Icon repo">
    <Page.Resources>
        <convert:InvertBool x:Key="invertBool"/>
        <convert:BoolToVisibility x:Key="boolToVisibility"/>
        <convert:InvertBoolToVisibility x:Key="invertBoolToVisibility"/>
        <convert:NullableStringPropertyDisplayConverter x:Key="propertyDisplay"/>
        <convert:SortOptionToBool x:Key="sortOptionToBool"/>
        <convert:URLtoAbsoluteURI x:Key="url2bitmapuri"/>
        <convert:PackStateToVisibility x:Key="packStateToVisibility"/>
        <convert:PackStateToGridLength x:Key="packStateToGridLength"/>

        <DataTemplate x:Key="IconPackIconDisplay">
            <Image Width="100" Height="100">
                <Image.Source>
                    <BitmapImage DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"
                                 UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}, TargetNullValue={x:Null}}"/>
                </Image.Source>
                <ToolTipService.ToolTip>
                    <TextBlock Text="{Binding Tooltip.Name}"/>
                </ToolTipService.ToolTip>
            </Image>
        </DataTemplate>
        <DataTemplate x:Key="IconPackBannerDisplay">
            <Image Height="112" Margin="-2">
                <Image.Source>
                    <BitmapImage DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"
                                 UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}, TargetNullValue={x:Null}}"/>
                </Image.Source>
            </Image>
        </DataTemplate>
        <local:IconPreviewTemplateSelector 
            x:Key="iconPreviewTemplateSelector"
            IconDisplay="{StaticResource IconPackIconDisplay}"
            BannerDisplay="{StaticResource IconPackBannerDisplay}"/>
        
        <!--Table preview flyout-->
        <DataTemplate x:Key="tableIconPreview">
            <Image Width="64" Height="64">
                <Image.Source>
                    <BitmapImage UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}, TargetNullValue={x:Null}}"
                                 DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"/>
                </Image.Source>
                <ToolTipService.ToolTip>
                    <TextBlock Text="{Binding Tooltip.Name}"/>
                </ToolTipService.ToolTip>
            </Image>
        </DataTemplate>
        <DataTemplate x:Key="tableBannerPreview">
            <Image Height="84" Margin="-2">
                <Image.Source>
                    <BitmapImage UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}, TargetNullValue={x:Null}}"
                                 DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"/>
                </Image.Source>
            </Image>
        </DataTemplate>
        <local:IconPreviewTemplateSelector 
            x:Key="tablePreviewTemplator"
            IconDisplay="{StaticResource tableIconPreview}"
            BannerDisplay="{StaticResource tableBannerPreview}"/>
    </Page.Resources>
    <Page.DataContext>
        <vm:HomeViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ui:CommandBar Grid.Row="0"
                       x:Name="OptionsCommandBar"
                       IsDynamicOverflowEnabled="False"
                       OverflowButtonVisibility="Collapsed"
                       Background="Transparent">
            <ui:CommandBar.Content>
                <Grid>
                    <ui:AutoSuggestBox Text="{Binding SearchQuery, Mode=TwoWay}" Margin="5" 
                               IsEnabled="{Binding CanSearch, Mode=OneWay}"
                               VerticalAlignment="Center" ItemsSource="{Binding QueryResults, Mode=OneWay}"
                               PlaceholderText="Enter keyword to search.." Width="350"/>
                </Grid>

            </ui:CommandBar.Content>

            <ui:AppBarButton Icon="Sort" Label="Sort by" Click="OpenAttatchedFlyout" x:Name="sortButtonCMD">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="BottomEdgeAlignedRight">
                        <ui:RadioMenuItem Header="Name" GroupName="sortby"
                                          Command="{Binding SortByNameCommand}"
                                          IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='Name'}"/>
                        <ui:RadioMenuItem Header="Author" GroupName="sortby"
                                          Command="{Binding SortByAuthorCommand}"
                                          IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='Author'}"/>
                        <ui:RadioMenuItem Header="Last update" GroupName="sortby"
                                          Command="{Binding SortByLastUpdateCommand}"
                                          IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='LastUpdate'}"/>

                        <Separator/>

                        <ui:RadioMenuItem Header="Ascending" GroupName="ascend"
                                          Command="{Binding SortByAscendingCommand}"
                                          IsChecked="{Binding Config.SortAscending, Mode=OneWay}"/>
                        <ui:RadioMenuItem Header="Descending" GroupName="ascend"
                                          Command="{Binding SortByDescendingCommand}"
                                          IsChecked="{Binding Config.SortAscending, Mode=OneWay, Converter={StaticResource invertBool}}"/>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>
            <ui:AppBarButton Icon="Filter" Label="Filter packs" Click="OpenAttatchedFlyout" x:Name="filterButtonCMD">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="BottomEdgeAlignedRight">
                        <MenuItem Header="Perks only" Command="{Binding OnlyPerkFilterCommand}"/>
                        <MenuItem Header="Portraits only" Command="{Binding OnlyPortraitFilterCommand}"/>
                        <MenuItem Header="Complete pack" Command="{Binding ClearFilterCommand}"/>
                        <Separator/>
                        <MenuItem Header="Perks" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPerks, Mode=TwoWay}"/>
                        <MenuItem Header="Portraits" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPortraits, Mode=TwoWay}"/>
                        <MenuItem Header="Status effects" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasStatus, Mode=TwoWay}"/>
                        <MenuItem Header="Powers" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPowers, Mode=TwoWay}"/>
                        <MenuItem Header="Offerings" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasOfferings, Mode=TwoWay}"/>
                        <MenuItem Header="Items" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasItems, Mode=TwoWay}"/>
                        <MenuItem Header="Add-Ons" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasAddons, Mode=TwoWay}"/>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

            <ui:AppBarButton Icon="View" Label="Layout view" Click="OpenAttatchedFlyout" x:Name="layoutButtonCMD">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="BottomEdgeAlignedRight">
                        <ui:RadioMenuItem Header="Grid" GroupName="view"
                                          IsChecked="{Binding CurrentViewIsGrid, Mode=OneWay}"
                                          Command="{Binding SetViewToGridCommand}">
                            <MenuItem.Icon>
                                <ui:FontIcon Glyph="&#xE138;"/>
                            </MenuItem.Icon>
                        </ui:RadioMenuItem>
                        <ui:RadioMenuItem Header="List" GroupName="view"
                                          IsChecked="{Binding CurrentViewIsList, Mode=OneWay}"
                                          Command="{Binding SetViewToListCommand}">
                            <MenuItem.Icon>
                                <ui:FontIcon Glyph="&#xE15C;"/>
                            </MenuItem.Icon>
                        </ui:RadioMenuItem>
                        <ui:RadioMenuItem Header="Table" GroupName="view"
                                          IsChecked="{Binding CurrentViewIsTable, Mode=OneWay}"
                                          Command="{Binding SetViewToTableCommand}">
                            <MenuItem.Icon>
                                <ui:FontIcon Glyph="&#xE700;"/>
                            </MenuItem.Icon>
                        </ui:RadioMenuItem>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

            <ui:AppBarButton Click="OpenAttatchedFlyout"
                             Label="Download option" Icon="Download"
                             x:Name="downloadButtonCMD">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="BottomEdgeAlignedRight">
                        <MenuItem IsHitTestVisible="False" Header="Install option:"
                                  IsEnabled="False"/>
                        <ui:RadioMenuItem GroupName="mode"
                                          Header="Install everything in pack"
                                          IsChecked="{Binding Config.InstallEverythingInPack, Mode=OneWay}"
                                          Command="{Binding SetInstallEverythingCommand}"/>
                        <ui:RadioMenuItem GroupName="mode"
                                          Header="Ask which icons to install"
                                          IsChecked="{Binding Config.InstallEverythingInPack, Mode=OneWay, Converter={StaticResource invertBool}}"
                                          Command="{Binding SetInstallSpcificCommand}"/>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

        </ui:CommandBar>

        <!--Grid view-->
        <ui:GridView Grid.Row="1" ItemsSource="{Binding FilteredList, Mode=OneWay}"
                     IsSelectionEnabled="False"
                     Padding="12"
                     Visibility="{Binding ShowOnGridView, Mode=OneWay}">
            <ui:GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Width="480" Height="270">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Background -->
                        <Rectangle Fill="{DynamicResource NavigationViewDefaultPaneBackground}" Grid.RowSpan="4" Opacity="0.5"/>
                        <!-- Preview/Banner -->                        
                        <ui:ListView ScrollViewer.CanContentScroll="False"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     HorizontalContentAlignment="Center"
                                     IsSelectionEnabled="False" Focusable="False"
                                     ItemTemplateSelector="{StaticResource iconPreviewTemplateSelector}"
                                     ItemsSource="{Binding PreviewSources, Mode=OneWay}">
                            <ui:ListView.ItemContainerStyle>
                                <Style TargetType="ui:ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="6"/>
                                    <Setter Property="Focusable" Value="False"/>
                                </Style>
                            </ui:ListView.ItemContainerStyle>
                            <ui:ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1"/>
                                </ItemsPanelTemplate>
                            </ui:ListView.ItemsPanel>
                        </ui:ListView>
                        
                        <!-- Name display -->                        
                        <TextBlock HorizontalAlignment="Center" 
                                   Text="{Binding Info.Name}" 
                                   Margin="8" Grid.Row="1"
                                   FontSize="20" FontWeight="Bold"/>

                        <!-- Other info -->
                        <StackPanel Grid.Row="2" Margin="10,4">
                            <StackPanel.Resources>
                                <Style TargetType="ui:FontIcon">
                                    <Setter Property="Margin" Value="4,0"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock HorizontalAlignment="Left">
                                Author: <Hyperlink Command="{Binding SearchForThisAuthorCommand}"><Run Text="{Binding Info.Author, Converter={StaticResource propertyDisplay}}"/></Hyperlink>
                            </TextBlock>
                            <!-- Content availability info info -->
                            <StackPanel Orientation="Horizontal" Margin="0,4">
                                <TextBlock Text="Content: "/>
                                <ui:FontIcon Glyph="&#xE18A;" FontFamily="Segoe MDL2 Assets" Margin="0,0,4,0"
                                             ToolTip="This icon pack contain perks icon"
                                             Visibility="{Binding Info.ContentInfo.HasPerks, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain portraits icon"
                                             Visibility="{Binding Info.ContentInfo.HasPortraits, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain killer powers icon"
                                             Visibility="{Binding Info.ContentInfo.HasPowers, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain survivor items icon"
                                             Visibility="{Binding Info.ContentInfo.HasItems, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain power/item addons icon"
                                             Visibility="{Binding Info.ContentInfo.HasAddons, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain status effects icon"
                                             Visibility="{Binding Info.ContentInfo.HasStatus, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain offerings icon"
                                             Visibility="{Binding Info.ContentInfo.HasOfferings, Converter={StaticResource boolToVisibility}}"/>
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- Install & Detail -->
                        <Grid HorizontalAlignment="Stretch" Grid.Row="3"
                              Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <!-- Separator -->
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToGridLength}}"/>
                            </Grid.ColumnDefinitions>
                            <!-- Normal state -->
                            <Button Grid.Column="0" HorizontalAlignment="Stretch"
                                            Command="{Binding InstallThisPackCommand}"
                                            MinWidth="32" MinHeight="32"
                                            Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='None'}">
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph=""
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Install"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Detail button -->
                            <Button ToolTipService.ToolTip="Detail"
                                    Grid.Column="2" HorizontalAlignment="Stretch"
                                    MinWidth="32"
                                    MinHeight="32"
                                    Command="{Binding OpenPackDetailWindowCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph="" 
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Detail"
                                               Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='None'}"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Downloading state -->
                            <!-- Downloading status display -->
                            <ProgressBar Minimum="0" Maximum="100" Value="{Binding TotalDownloadProgress, Mode=OneWay}"
                                         VerticalAlignment="Center" Height="18" Margin="5"
                                         Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Downloading'}"/>
                            
                            <!-- Installing state -->
                            <TextBlock Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Installing'}">
                                <Run Text="{Binding LatestInstalledFile, Mode=OneWay}"/>
                                (<Run Text="{Binding CurrentInstallProgress, Mode=OneWay}"/>/<Run Text="{Binding TotalInstallProgress, Mode=OneWay}"/>)
                            </TextBlock>
                        </Grid>
                        
                        <!-- Favorite -->
                        <Button Background="Transparent" 
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Command="{Binding FavoriteThisPackCommand}"
                                Margin="4">
                            <Grid>
                                <ui:FontIcon Glyph="&#xE1CE;" />
                            </Grid>
                        </Button>
                        <!-- Unfavorite -->
                        <Button Background="Transparent"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                Margin="4"
                                Command="{Binding UnFavoriteThisPackCommand}"
                                Visibility="{Binding IsFavorited, Mode=OneWay, Converter={StaticResource boolToVisibility}}">
                            <Grid>
                                <ui:FontIcon Glyph="&#xE1CE;" />
                                <ui:FontIcon Glyph="&#xE1CF;" Foreground="Yellow" />
                            </Grid>
                        </Button>
                    </Grid>
                </DataTemplate>
            </ui:GridView.ItemTemplate>
        </ui:GridView>
        <!--List view-->
        <ui:ListView Grid.Row="1" ItemsSource="{Binding FilteredList, Mode=OneWay}"
                     IsSelectionEnabled="False"
                     Padding="14"
                     Visibility="{Binding ShowOnListView, Mode=OneWay}">
            <ui:ListView.ItemContainerStyle>
                <Style TargetType="ui:ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Padding" Value="4"/>
                </Style>
            </ui:ListView.ItemContainerStyle>
            <ui:ListView.ItemTemplate>
                <DataTemplate>
                    <!-- Preview/Banner -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Background -->
                        <Rectangle Fill="{DynamicResource NavigationViewDefaultPaneBackground}" Grid.RowSpan="4" Opacity="0.5"/>
                        
                        <Image Width="100" Height="100" Visibility="{Binding RevealIfMainPreviewIsIcon}">
                            <Image.Source>
                                <BitmapImage UriSource="{Binding MainPreviewItem.URL, Converter={StaticResource url2bitmapuri}}"
                                 DecodePixelWidth="{Binding MainPreviewItem.DecodeWidth}"
                                 DecodePixelHeight="{Binding MainPreviewItem.DecodeHeight}"/>
                            </Image.Source>
                            <ToolTipService.ToolTip>
                                <TextBlock Text="{Binding MainPreviewItem.Tooltip.Name}"/>
                            </ToolTipService.ToolTip>
                        </Image>
                        <Image Height="100" Width="100" Stretch="UniformToFill" Visibility="{Binding RevealIfMainPreviewIsBanner}"
                               x:Name="bannerPreview">
                            <Image.Triggers>
                                <EventTrigger RoutedEvent="MouseEnter">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="bannerPreview"
                                                                           Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0" Value="100"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.1" Value="115"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.3" Value="420"/>
                                                </DoubleAnimationUsingKeyFrames.KeyFrames>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="bannerBlurBits"
                                                                           Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.3" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames.KeyFrames>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="MouseLeave">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="bannerPreview"
                                                                           Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.28" Value="115"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.3" Value="100"/>
                                                </DoubleAnimationUsingKeyFrames.KeyFrames>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="bannerBlurBits"
                                                                           Storyboard.TargetProperty="Width">
                                                <DoubleAnimationUsingKeyFrames.KeyFrames>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.28" Value="0"/>
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.3" Value="400"/>
                                                </DoubleAnimationUsingKeyFrames.KeyFrames>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>
                            <Image.Source>
                                <BitmapImage UriSource="{Binding MainPreviewItem.URL, Converter={StaticResource url2bitmapuri}}"
                                 DecodePixelWidth="{Binding MainPreviewItem.DecodeWidth}"
                                 DecodePixelHeight="{Binding MainPreviewItem.DecodeHeight}"/>
                            </Image.Source>
                        </Image>
                        <Grid Grid.Column="1" Grid.ColumnSpan="2" ClipToBounds="True" 
                              x:Name="bannerBlurBits" HorizontalAlignment="Left"
                              Width="420" Visibility="{Binding RevealIfMainPreviewIsBanner, Mode=OneWay}">
                            <Image Grid.Column="1" Height="100" Width="420" Margin="-100,0,0,0" x:Name="additionalBitsImage"
                                   Stretch="Fill" HorizontalAlignment="Left">
                                <Image.Source>
                                    <BitmapImage UriSource="{Binding MainPreviewItem.URL, Converter={StaticResource url2bitmapuri}}"
                                             DecodePixelWidth="{Binding MainPreviewItem.DecodeWidth}"
                                             DecodePixelHeight="{Binding MainPreviewItem.DecodeHeight}"/>
                                </Image.Source>
                            </Image>
                            <Rectangle Height="100" Width="400"
                                       Fill="{fw:AcrylicBrush TargetName=additionalBitsImage}"/>
                        </Grid>                        
                        
                        <!--Info-->
                        <StackPanel Grid.Column="2" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal">                                
                                <!--Pack name-->
                                <TextBlock HorizontalAlignment="Left" 
                                           VerticalAlignment="Center"
                                           Text="{Binding Info.Name}" 
                                           FontSize="20" FontWeight="Bold"/>
                                <!--Favorite buttons-->
                                <Grid>
                                    <!-- Favorite -->
                                    <Button Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top"
                                            Command="{Binding FavoriteThisPackCommand}" Margin="4">
                                        <Grid>
                                            <ui:FontIcon Glyph="&#xE1CE;" FontSize="16" />
                                        </Grid>
                                    </Button>
                                    <!-- Unfavorite -->
                                    <Button Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="4"
                                            Command="{Binding UnFavoriteThisPackCommand}"
                                            Visibility="{Binding IsFavorited, Mode=OneWay, Converter={StaticResource boolToVisibility}}">
                                        <Grid>
                                            <ui:FontIcon Glyph="&#xE1CE;" FontSize="16"/>
                                            <ui:FontIcon Glyph="&#xE1CF;" Foreground="Yellow" FontSize="16" />
                                        </Grid>
                                    </Button>
                                </Grid>
                                
                            </StackPanel>
                            <StackPanel Grid.Row="2" Margin="0,4">
                                <StackPanel.Resources>
                                    <Style TargetType="ui:FontIcon">
                                        <Setter Property="Margin" Value="4,0"/>
                                    </Style>
                                </StackPanel.Resources>
                                <TextBlock HorizontalAlignment="Left">
                                Author: <Hyperlink Command="{Binding SearchForThisAuthorCommand}"><Run Text="{Binding Info.Author, Converter={StaticResource propertyDisplay}}"/></Hyperlink>
                                </TextBlock>
                                <!-- Content availability info info -->
                                <StackPanel Orientation="Horizontal" Margin="0,4">
                                    <TextBlock Text="Content: "/>
                                    <ui:FontIcon Glyph="&#xE18A;" FontFamily="Segoe MDL2 Assets" Margin="0,0,4,0"
                                             ToolTip="This icon pack contain perks icon"
                                             Visibility="{Binding Info.ContentInfo.HasPerks, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain portraits icon"
                                             Visibility="{Binding Info.ContentInfo.HasPortraits, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain killer powers icon"
                                             Visibility="{Binding Info.ContentInfo.HasPowers, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain survivor items icon"
                                             Visibility="{Binding Info.ContentInfo.HasItems, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain power/item addons icon"
                                             Visibility="{Binding Info.ContentInfo.HasAddons, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain status effects icon"
                                             Visibility="{Binding Info.ContentInfo.HasStatus, Converter={StaticResource boolToVisibility}}"/>
                                    <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain offerings icon"
                                             Visibility="{Binding Info.ContentInfo.HasOfferings, Converter={StaticResource boolToVisibility}}"/>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        
                        <!--Install & details-->
                        <Grid VerticalAlignment="Center" Grid.Column="3" Margin="12,0" MinWidth="120">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <!-- Separator -->
                                <RowDefinition Height="8"/>
                                <RowDefinition Height="Auto"/>
                                <!--Status-->
                                <RowDefinition Height="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToGridLength}}"/>
                            </Grid.RowDefinitions>
                            <!-- Normal state -->
                            <Button Grid.Row="0" HorizontalAlignment="Stretch"
                                            Command="{Binding InstallThisPackCommand}"
                                            MinWidth="32" MinHeight="32"
                                            Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='None'}">
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph=""
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Install"/>
                                </StackPanel>
                            </Button>

                            <!-- Detail button -->
                            <Button ToolTipService.ToolTip="Detail"
                                    Grid.Row="2" HorizontalAlignment="Stretch"
                                    MinWidth="32"
                                    MinHeight="32"
                                    Command="{Binding OpenPackDetailWindowCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph="" 
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Detail"/>
                                </StackPanel>
                            </Button>

                            <!-- Downloading state -->
                            <!-- Downloading status display -->
                            <ProgressBar Minimum="0" Maximum="100" Value="{Binding TotalDownloadProgress, Mode=OneWay}"
                                         VerticalAlignment="Center" Height="18" Margin="5"
                                         Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Downloading'}"/>

                            <!-- Installing state -->
                            <TextBlock Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Installing'}">
                                <Run Text="{Binding LatestInstalledFile, Mode=OneWay}"/>
                                (<Run Text="{Binding CurrentInstallProgress, Mode=OneWay}"/>/<Run Text="{Binding TotalInstallProgress, Mode=OneWay}"/>)
                            </TextBlock>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ui:ListView.ItemTemplate>
        </ui:ListView>
        <!--Table view-->
        <DataGrid Grid.Row="1" ItemsSource="{Binding FilteredList, Mode=OneWay}"
                  SelectionMode="Single" Padding="14" Visibility="{Binding ShowOnTableView, Mode=OneWay}"
                  AutoGenerateColumns="False" CanUserResizeColumns="True" IsReadOnly="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Preview" CanUserReorder="False" CanUserResize="False" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button HorizontalAlignment="Center" Background="Transparent" Click="OpenAttatchedFlyout">
                                <Button.ToolTip>
                                    <TextBlock>
                                        Left click: Pack preview
                                        <LineBreak/>Right clicl: Pack menu
                                    </TextBlock>
                                </Button.ToolTip>
                                <ui:FontIcon Glyph="&#xE10C;"/>
                                <ui:FlyoutBase.AttachedFlyout>
                                    <ui:Flyout>
                                        <ui:ListView ScrollViewer.CanContentScroll="False"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                                     HorizontalContentAlignment="Center"
                                                     IsSelectionEnabled="False" Focusable="False"
                                                     ItemTemplateSelector="{StaticResource tablePreviewTemplator}"
                                                     ItemsSource="{Binding PreviewSources, Mode=OneWay}">
                                            <ui:ListView.ItemContainerStyle>
                                                <Style TargetType="ui:ListViewItem">
                                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                    <Setter Property="Padding" Value="0"/>
                                                    <Setter Property="Margin" Value="6"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                </Style>
                                            </ui:ListView.ItemContainerStyle>
                                            <ui:ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Rows="1"/>
                                                </ItemsPanelTemplate>
                                            </ui:ListView.ItemsPanel>
                                        </ui:ListView>
                                    </ui:Flyout>
                                </ui:FlyoutBase.AttachedFlyout>
                                <ui:ContextFlyoutService.ContextFlyout>
                                    <ui:MenuFlyout>
                                        <MenuItem Header="Details" Command="{Binding OpenPackDetailWindowCommand}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon Glyph="&#xE946;"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Search this author"
                                                  Command="{Binding SearchForThisAuthorCommand}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon Glyph="&#xE11A;"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="Favorite"
                                                  Visibility="{Binding IsFavorited, Mode=OneWay, Converter={StaticResource invertBoolToVisibility}}"
                                                  Command="{Binding FavoriteThisPackCommand}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon Glyph="&#xE1CE;"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="UnFavorite"
                                                  Visibility="{Binding IsFavorited, Mode=OneWay, Converter={StaticResource boolToVisibility}}"
                                                  Command="{Binding UnFavoriteThisPackCommand}">
                                            <MenuItem.Icon>
                                                <ui:FontIcon Glyph="&#xE8D9;"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Install" Command="{Binding InstallThisPackCommand}">
                                            <MenuItem.Icon>
                                                <ui:SymbolIcon Symbol="Download"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ui:MenuFlyout>
                                </ui:ContextFlyoutService.ContextFlyout>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Pack name" Binding="{Binding Path=Info.Name}"/>
                <DataGridTextColumn Header="Author" Binding="{Binding Path=Info.Author}"/>
                <DataGridCheckBoxColumn Header="Perks" Binding="{Binding Info.ContentInfo.HasPerks}"/>
                <DataGridCheckBoxColumn Header="Portraits" Binding="{Binding Info.ContentInfo.HasPortraits}"/>
                <DataGridCheckBoxColumn Header="Powers" Binding="{Binding Info.ContentInfo.HasPowers}"/>
                <DataGridCheckBoxColumn Header="Items" Binding="{Binding Info.ContentInfo.HasItems}"/>
                <DataGridCheckBoxColumn Header="Addons" Binding="{Binding Info.ContentInfo.HasAddons}"/>
                <DataGridCheckBoxColumn Header="Status" Binding="{Binding Info.ContentInfo.HasStatus}"/>
                <DataGridCheckBoxColumn Header="Offerings" Binding="{Binding Info.ContentInfo.HasOfferings}"/>
            </DataGrid.Columns>            
        </DataGrid>
        
        <!-- Getting packs -->
        <StackPanel Orientation="Vertical" 
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="{Binding IsGettingPacks, Mode=OneWay}"
                    Grid.RowSpan="2">
            <ui:ProgressRing Width="64" Height="64" Margin="12"
                             IsActive="True"
                             Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"/>
            <TextBlock Text="Gathering icon pack data"
                       Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}"
                       FontSize="32"/>
        </StackPanel>
        <!-- No pack -->
        <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center" Foreground="Gray"
                   x:Name="tooManyFilter"
                   Visibility="{Binding IsFilteredListEmpty, Converter={StaticResource boolToVisibility}, Mode=OneWay}">
            <Run Text="No icon pack found!" FontSize="24" FontWeight="Bold"/>
            <LineBreak/><Run Text="Try remove some filters..."/>
        </TextBlock>
    </Grid>
</Page>

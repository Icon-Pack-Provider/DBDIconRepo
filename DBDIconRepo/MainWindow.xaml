<Window x:Class="DBDIconRepo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DBDIconRepo"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        xmlns:convert="clr-namespace:DBDIconRepo.Converters"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="Dead by daylight: Icon repo" Height="720" Width="1024">
    <Window.Resources>
        <convert:InvertBool x:Key="invertBool"/>
        <convert:BoolToVisibility x:Key="boolToVisibility"/>
        <convert:InvertBoolToVisibility x:Key="invertBoolToVisibility"/>
        <convert:BoolToExpandedGridLength x:Key="boolToExpandGridLength"/>
        <convert:NullableStringPropertyDisplayConverter x:Key="propertyDisplay"/>
        <convert:SortOptionToBool x:Key="sortOptionToBool"/>
        <convert:URLtoAbsoluteURI x:Key="url2bitmapuri"/>
        <convert:PackStateToVisibility x:Key="packStateToVisibility"/>
        <convert:PackStateToGridLength x:Key="packStateToGridLength"/>
        <convert:BytesImageDecoderConverter x:Key="bytesToImage"/>
        <convert:GitServiceToUsername x:Key="gitServiceToUsername"/>
        <convert:AnonymousIconRandomizer x:Key="anonIconRandomizer"/>

        <system:Boolean x:Key="BTrue">True</system:Boolean>
        <system:Boolean x:Key="BFalse">False</system:Boolean>
        <DataTemplate x:Key="IconPackIconDisplay">
            <Image Width="100" Height="100">
                <Image.Source>
                    <BitmapImage UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}}"
                                 DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"/>
                </Image.Source>
            </Image>
        </DataTemplate>
        <DataTemplate x:Key="IconPackBannerDisplay">
            <Image Height="96" Margin="14">
                <Image.Source>
                    <BitmapImage UriSource="{Binding URL, Converter={StaticResource url2bitmapuri}}"
                                 DecodePixelWidth="{Binding DecodeWidth}"
                                 DecodePixelHeight="{Binding DecodeHeight}"/>
                </Image.Source>
            </Image>
        </DataTemplate>
        <local:IconPreviewTemplateSelector 
            x:Key="iconPreviewTemplateSelector"
            IconDisplay="{StaticResource IconPackIconDisplay}"
            BannerDisplay="{StaticResource IconPackBannerDisplay}"/>

        <ui:Flyout x:Key="anonymousUserFlyout">
            
        </ui:Flyout>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <ui:CommandBar Grid.Row="0" DefaultLabelPosition="Right">
            <ui:CommandBar.Content>
                <ui:AutoSuggestBox Text="{Binding SearchQuery, Mode=TwoWay}" Margin="5" VerticalAlignment="Center"
                                       PlaceholderText="Enter keyword to search.."
                                       Width="350"/>
            </ui:CommandBar.Content>

            <ui:AppBarButton Label="Sort" Icon="Sort" Click="OpenAttatchedFlyout">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="Bottom">
                        <MenuItem Header="Name" IsCheckable="True"
                                  Command="{Binding SortByNameCommand}"
                                  IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='Name'}"/>
                        <MenuItem Header="Author" IsCheckable="True"
                                  Command="{Binding SortByAuthorCommand}"
                                  IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='Author'}"/>
                        <MenuItem Header="Last update" IsCheckable="True"
                                  Command="{Binding SortByLastUpdateCommand}"
                                  IsChecked="{Binding Config.SortBy, Mode=OneWay, Converter={StaticResource sortOptionToBool}, ConverterParameter='LastUpdate'}"/>
                        
                        <Separator/>
                        
                        <MenuItem Header="Ascending" 
                                  IsCheckable="True"
                                  Command="{Binding SortByAscendingCommand}"
                                  IsChecked="{Binding Config.SortAscending, Mode=OneWay}"/>
                        <MenuItem Header="Descending"  
                                  IsCheckable="True"
                                  Command="{Binding SortByDescendingCommand}"
                                  IsChecked="{Binding Config.SortAscending, Mode=OneWay, Converter={StaticResource invertBool}}"/>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>
            <ui:AppBarButton Label="Filter" Icon="Filter" Click="OpenAttatchedFlyout">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:MenuFlyout Placement="Bottom">
                        <MenuItem Header="Perks only" Command="{Binding OnlyPerkFilterCommand}"/>
                        <MenuItem Header="Portraits only" Command="{Binding OnlyPortraitFilterCommand}"/>
                        <MenuItem Header="Complete pack" Command="{Binding ClearFilterCommand}"/>
                        <Separator/>
                        <MenuItem Header="Perks" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPerks, Mode=TwoWay}"/>
                        <MenuItem Header="Portraits" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPortraits, Mode=TwoWay}"/>
                        <MenuItem Header="Status effects" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasStatus, Mode=TwoWay}"/>
                        <MenuItem Header="Powers" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasPowers, Mode=TwoWay}"/>
                        <MenuItem Header="Offerings" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasOfferings, Mode=TwoWay}"/>
                        <MenuItem Header="Items" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasItems, Mode=TwoWay}"/>
                        <MenuItem Header="Add-Ons" IsCheckable="True" IsChecked="{Binding Config.FilterOptions.HasAddons, Mode=TwoWay}"/>
                    </ui:MenuFlyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

            <ui:AppBarSeparator/>

            <ui:AppBarButton Icon="Setting" Label="Setting" Click="OpenAttatchedFlyout">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:Flyout Placement="BottomEdgeAlignedRight">
                        <StackPanel Orientation="Vertical">
                            <TextBlock FontSize="24" FontWeight="Bold" Text="Settings" Margin="0,5"/>

                            <ui:AutoSuggestBox PlaceholderText="C:\SteamLibrary\common\Dead by Daylight\"
                                               Text="{Binding Config.DBDInstallationPath, Mode=TwoWay}"
                                               Header="Dead by Daylight installation path" Margin="0,2"
                                               Width="400"/>

                            <StackPanel Orientation="Horizontal" Margin="0,4">
                                <Button Content="Browse..." Command="{Binding BrowseForDBDCommand}"/>
                                <ui:SplitButton Content="Detect" Margin="2,0">
                                    <ui:SplitButton.Flyout>
                                        <ui:MenuFlyout>
                                            <MenuItem Header="Steam" Command="{Binding LocateDBDCommand}"/>
                                            <MenuItem Header="Xbox game pass PC"/>
                                            <MenuItem Header="Epic Games"/>
                                        </ui:MenuFlyout>
                                    </ui:SplitButton.Flyout>
                                </ui:SplitButton>
                            </StackPanel>

                            <ui:ToggleSwitch Header="Freeze app to speedup Install items list" Margin="0,5"
                                             IsOn="{Binding Config.SacrificingAppResponsiveness, Mode=TwoWay}"/>

                            <ui:ToggleSwitch Header="Show Default icon pack" Margin="0,5"
                                             IsOn="{Binding Config.ShowDefaultPack, Mode=TwoWay}"/>
                            <!-- TODO:Planned feature -->
                            <ui:ToggleSwitch Header="Show all pack outside curated repo" Margin="0,5"
                                             Visibility="Collapsed"/>

                            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                <Button Content="Reset settings" Command="{Binding ResetSettingCommand}"/>
                                <Button Content="Uninstall icon pack" Margin="5,0" Command="{Binding UninstallIconPackCommand}"/>
                            </StackPanel>

                        </StackPanel>
                    </ui:Flyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

            <ui:AppBarSeparator/>

            <ui:AppBarButton Label="Anonymous"
                             Click="OpenAttatchedFlyout"
                             Visibility="{Binding GitService.IsAnonymous, Converter={StaticResource boolToVisibility}}">
                <ui:AppBarButton.Icon>
                    <ui:FontIcon Glyph="{Binding GitService.IsAnonymous, Converter={StaticResource anonIconRandomizer}}"
                                 FontFamily="Segoe MDL2 Assets"/>
                </ui:AppBarButton.Icon>
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:Flyout Placement="BottomEdgeAlignedRight">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!--User info-->
                            <StackPanel Orientation="Horizontal">
                                <Image Width="64" Height="64" Margin="5"
                                       Source="pack://application:,,,/Resources/pfpHolder.ico"/>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <TextBlock Text="Anonymous"/>
                                    <TextBlock FontSize="12">
                                        Not logged in, <LineBreak/>lower rate limit
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <!--API Limit info-->
                            <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left">
                                <TextBlock>
                                    Request per hour: <Run Text="{Binding RequestPerHour, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                                <TextBlock>
                                    Remaining request: <Run Text="{Binding RequestRemain, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                                <TextBlock>
                                    Refill in: <Run Text="{Binding ResetIn, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Stretch"
                                        Grid.Row="2">
                                <Button HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Margin="0,5"
                                        Command="{Binding CheckRateLimitCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <ui:SymbolIcon Symbol="Help" Margin="0,0,5,0"/>
                                        <TextBlock Text="Check rate limit" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Button HorizontalAlignment="Stretch"
                                        Command="{Binding DestructivelyCheckRateLimitCommand}"
                                        HorizontalContentAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <ui:SymbolIcon Symbol="Important" Margin="0,0,5,0"/>
                                        <TextBlock Text="Check rate limit (Destructive)" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <Button Grid.Row="3" Margin="0,5,0,0"
                                    Content="Login to GitHub" FontWeight="Bold"
                                    Command="{Binding LoginToGithubCommand}"
                                    HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ui:Flyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>

            <ui:AppBarButton Label="{Binding Config.GitUsername}"
                             Click="OpenAttatchedFlyout"
                             Visibility="{Binding GitService.IsAnonymous, Converter={StaticResource invertBoolToVisibility}}" Icon="Contact">
                <ui:FlyoutBase.AttachedFlyout>
                    <ui:Flyout Placement="BottomEdgeAlignedRight" x:Name="userLoggedinFlyout">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <!--User info-->
                            <StackPanel Orientation="Horizontal">
                                <ui:PersonPicture Width="64" Height="64" Margin="0,0,5,0"
                                                  ProfilePicture="{Binding ProfilePicUri}"/>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                                    <TextBlock Text="{Binding Config.GitUsername}"
                                               FontSize="18" FontWeight="Bold"/>
                                    <TextBlock FontSize="12">
                                        Logged in
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>
                            <!--API Limit info-->
                            <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left">
                                <TextBlock>
                                    Request per hour: <Run Text="{Binding RequestPerHour, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                                <TextBlock>
                                    Remaining request: <Run Text="{Binding RequestRemain, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                                <TextBlock>
                                    Refill in: <Run Text="{Binding ResetIn, Mode=OneWay, Converter={StaticResource propertyDisplay}}"/>
                                </TextBlock>
                            </StackPanel>
                            <StackPanel HorizontalAlignment="Stretch"
                                        Grid.Row="2">
                                <Button HorizontalAlignment="Stretch"
                                        HorizontalContentAlignment="Left"
                                        Margin="0,5"
                                        Command="{Binding CheckRateLimitCommand}">
                                    <StackPanel Orientation="Horizontal">
                                        <ui:SymbolIcon Symbol="Help" Margin="0,0,5,0"/>
                                        <TextBlock Text="Check rate limit" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                                <Button HorizontalAlignment="Stretch"
                                        Command="{Binding DestructivelyCheckRateLimitCommand}"
                                        HorizontalContentAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <ui:SymbolIcon Symbol="Important" Margin="0,0,5,0"/>
                                        <TextBlock Text="Check rate limit (Destructive)" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                            <Button Grid.Row="3" Margin="0,5,0,0" 
                                    Command="{Binding LogoutOfGithubCommand}"
                                    Content="Logout" FontWeight="Bold"
                                    HorizontalAlignment="Stretch"/>
                        </Grid>
                    </ui:Flyout>
                </ui:FlyoutBase.AttachedFlyout>
            </ui:AppBarButton>
            <ui:AppBarSeparator Foreground="Transparent" Margin="-2"/>
        </ui:CommandBar>

        <ui:GridView Grid.Row="1" ItemsSource="{Binding FilteredList, Mode=OneWay}"
                     IsSelectionEnabled="False"
                     Padding="12">
            <ui:GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Width="480" Height="270">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Background -->
                        <Rectangle Fill="DimGray" Grid.RowSpan="4" Opacity="0.5"/>
                        <!-- Preview/Banner -->
                        <ListView IsHitTestVisible="False" ScrollViewer.CanContentScroll="False"
                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                  HorizontalAlignment="Center"
                                  ItemTemplateSelector="{StaticResource iconPreviewTemplateSelector}"
                                  ItemsSource="{Binding PreviewSources, Mode=OneWay}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Margin" Value="6"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1" HorizontalAlignment="Stretch"/>
                                    <!--<WrapPanel Orientation="Horizontal" HorizontalAlignment="Center"/>-->
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>
                        
                        <!-- Name display -->                        
                        <TextBlock HorizontalAlignment="Center" 
                                   Text="{Binding Info.Name}" 
                                   Margin="8" Grid.Row="1"
                                   FontSize="20" FontWeight="Bold"/>

                        <!-- Other info -->
                        <StackPanel Grid.Row="2" Margin="10,4">
                            <StackPanel.Resources>
                                <Style TargetType="ui:FontIcon">
                                    <Setter Property="Margin" Value="4,0"/>
                                </Style>
                            </StackPanel.Resources>
                            <TextBlock HorizontalAlignment="Left">
                                Author: <Hyperlink Command="{Binding SearchForThisAuthorCommand}"><Run Text="{Binding Info.Author, Converter={StaticResource propertyDisplay}}"/></Hyperlink>
                            </TextBlock>
                            <!-- Content availability info info -->
                            <StackPanel Orientation="Horizontal" Margin="0,4">
                                <TextBlock Text="Content: "/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets" Margin="0,0,4,0"
                                             ToolTip="This icon pack contain perks icon"
                                             Visibility="{Binding Info.ContentInfo.HasPerks, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain portraits icon"
                                             Visibility="{Binding Info.ContentInfo.HasPortraits, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain killer powers icon"
                                             Visibility="{Binding Info.ContentInfo.HasPowers, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain survivor items icon"
                                             Visibility="{Binding Info.ContentInfo.HasItems, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain power/item addons icon"
                                             Visibility="{Binding Info.ContentInfo.HasAddons, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain status effects icon"
                                             Visibility="{Binding Info.ContentInfo.HasStatus, Converter={StaticResource boolToVisibility}}"/>
                                <ui:FontIcon Glyph="" FontFamily="Segoe MDL2 Assets"
                                             ToolTip="This icon pack contain offerings icon"
                                             Visibility="{Binding Info.ContentInfo.HasOfferings, Converter={StaticResource boolToVisibility}}"/>
                            </StackPanel>
                        </StackPanel>
                        
                        <!-- Install & Detail -->
                        <Grid HorizontalAlignment="Stretch" Grid.Row="3"
                              Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <!-- Separator -->
                                <ColumnDefinition Width="8"/>
                                <ColumnDefinition Width="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToGridLength}}"/>
                            </Grid.ColumnDefinitions>
                            <!-- Normal state -->
                            <ui:SplitButton Grid.Column="0" HorizontalAlignment="Stretch"
                                            Command="{Binding InstallThisPackCommand}"
                                            MinWidth="32" MinHeight="32"
                                            Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='None'}">
                                <ui:SplitButton.Flyout>
                                    <ui:MenuFlyout Placement="BottomEdgeAlignedRight">
                                        <MenuItem IsCheckable="True" IsChecked="{Binding ShouldInstallEverything, Mode=OneWay}" 
                                                  Command="{Binding SetInstallAllCommand}"
                                                  Header="Install all"/>
                                        <MenuItem IsCheckable="True" IsChecked="{Binding ShouldInstallEverything, Mode=OneWay, Converter={StaticResource invertBool}}" 
                                                  Command="{Binding SetNotInstallAllCommand}"
                                                  Header="Install specific"/>
                                    </ui:MenuFlyout>
                                </ui:SplitButton.Flyout>
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph=""
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Install"/>
                                </StackPanel>
                            </ui:SplitButton>
                            
                            <!-- Detail button -->
                            <Button ToolTipService.ToolTip="Detail"
                                    Grid.Column="2" HorizontalAlignment="Stretch"
                                    MinWidth="32"
                                    MinHeight="32"
                                    Command="{Binding OpenPackDetailWindowCommand}">
                                <StackPanel Orientation="Horizontal">
                                    <ui:FontIcon Glyph="" 
                                                 Margin="5,0"
                                                 FontFamily="Segoe MDL2 Assets"/>
                                    <TextBlock Text="Detail"
                                               Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='None'}"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Downloading state -->
                            <!-- Downloading status display -->
                            <ProgressBar Minimum="0" Maximum="100" Value="{Binding TotalDownloadProgress, Mode=OneWay}"
                                         VerticalAlignment="Center" Height="18" Margin="5"
                                         Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Downloading'}"/>
                            
                            <!-- Installing state -->
                            <TextBlock Visibility="{Binding CurrentPackState, Mode=OneWay, Converter={StaticResource packStateToVisibility}, ConverterParameter='Installing'}">
                                <Run Text="{Binding LatestInstalledFile, Mode=OneWay}"/>
                                (<Run Text="{Binding CurrentInstallProgress, Mode=OneWay}"/>/<Run Text="{Binding TotalInstallProgress, Mode=OneWay}"/>)
                            </TextBlock>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ui:GridView.ItemTemplate>
        </ui:GridView>
        
        <!-- No pack -->
        <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   x:Name="tooManyFilter"
                   Visibility="{Binding IsFilteredListEmpty, Converter={StaticResource boolToVisibility}, Mode=OneWay}">
            <Run Text="No icon pack found!" FontSize="24" FontWeight="Bold"/>
            <LineBreak/><Run Text="Try remove some filters..."/>
        </TextBlock>

        <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   Visibility="Collapsed"
                   x:Name="needLogin">
            <Run Text="No icon pack found!" FontSize="24" FontWeight="Bold"/>
            <LineBreak/><Run Text="Need git login token!..."/>
        </TextBlock>
    </Grid>
</Window>

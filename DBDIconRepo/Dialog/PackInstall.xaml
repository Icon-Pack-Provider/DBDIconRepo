<Window x:Class="DBDIconRepo.Dialog.PackInstall"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:DBDIconRepo.ViewModel"
        xmlns:convert="clr-namespace:DBDIconRepo.Converters"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        xmlns:local="clr-namespace:DBDIconRepo.Dialog"
        xmlns:m="clr-namespace:DBDIconRepo.Model"
        xmlns:lister="clr-namespace:SelectionListing.Model;assembly=SelectionListing"
        ui:WindowHelper.UseModernWindowStyle="True"
        mc:Ignorable="d" Height="480" Width="600">
    <d:Window.DataContext>
        <vm:PackInstallViewModel x:Name="ViewModel"/>
    </d:Window.DataContext>
    <Window.Resources>
        <convert:NameOrDisplayNameOnSelectionListing x:Key="listingNameDecide"/>
        <convert:BoolToVisibility x:Key="boolToVisibility"/>

        <DataTemplate x:Key="noInfo" DataType="{x:Type m:IPackSelectionItem}">
            <Grid>
                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"
                          HorizontalAlignment="Stretch"
                          Content="{Binding FullPath}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="hasInfo" DataType="{x:Type m:IPackSelectionItem}">
            <Grid>
                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"
                          HorizontalAlignment="Stretch">
                    <CheckBox.Content>
                        <TextBlock>
                            <Run Text="{Binding FullPath}"/> (<Run Text="{Binding Info.Name}"/>)
                        </TextBlock>
                    </CheckBox.Content>
                </CheckBox>
            </Grid>
        </DataTemplate>
        <local:ShowInfoOrNoInfo x:Key="selectorDisplay"
                                NoInfo="{StaticResource noInfo}"
                                HasInfo="{StaticResource hasInfo}"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Text="Select which components to install" FontSize="18" Margin="4,0" FontWeight="Bold"/>

        <ListBox Grid.Row="1" 
                 ItemsSource="{Binding InstallableItems, Mode=TwoWay}" 
                 SelectionMode="Multiple" 
                 ItemTemplateSelector="{StaticResource selectorDisplay}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel VirtualizingPanel.VirtualizationMode="Standard"
                                VirtualizingPanel.IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        
        <Rectangle Grid.Row="2" Fill="{DynamicResource CommandBarBackground}"/>
        <ui:CommandBar Grid.Row="2" DefaultLabelPosition="Bottom">
            <ui:CommandBar.Content>
                <ui:CommandBar HorizontalAlignment="Left" DefaultLabelPosition="Bottom">
                    <ui:AppBarButton Label="Select all" Icon="SelectAll" Command="{Binding SelectAllCommand}"/>
                    <ui:AppBarButton Label="Select none" Icon="ClearSelection" Command="{Binding UnSelectAllCommand}"/>
                    <!-- TODO: Selection helper, with dynamic menu. Loading menu list from git -->
                    <ui:AppBarSeparator/>
                    <ui:AppBarButton Label="Selection..." Icon="List" Click="OpenAttatchedFlyout">
                        <ui:AppBarButton.Resources>
                            <Style TargetType="{x:Type MenuItem}" x:Key="subMenu">
                                <Setter Property="Padding" Value="{DynamicResource MenuFlyoutItemThemePadding}"/>
                                <Setter Property="Header" Value="{Binding Path=., Converter={StaticResource listingNameDecide}}"/>
                                <Setter Property="Command" Value="{Binding Path=DataContext.SelectSpecificCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding Selections}"/>
                                <Setter Property="ItemsSource" Value="{Binding Childs}"/>
                            </Style>
                        </ui:AppBarButton.Resources>
                        <ui:FlyoutBase.AttachedFlyout>
                            <ui:MenuFlyout>
                                <MenuItem Header="Based on..." ItemsSource="{Binding Menu}" ItemContainerStyle="{StaticResource subMenu}"/>
                            </ui:MenuFlyout>
                            <!--<ui:MenuFlyout x:Name="selectMenuFlyout">
                                <ui:MenuFlyout.MenuFlyoutPresenterStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="{Binding Path=., Converter={StaticResource listingNameDecide}}"/>
                                        <Setter Property="Command" Value="{Binding Path=DataContext.SelectSpecificCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding Selections}"/>
                                        <Setter Property="ItemsSource" Value="{Binding Childs}"/>
                                    </Style>
                                </ui:MenuFlyout.MenuFlyoutPresenterStyle>

                                --><!--<MenuItem ItemsSource="{Binding Menu}"/>--><!--
                            </ui:MenuFlyout>-->
                        </ui:FlyoutBase.AttachedFlyout>
                    </ui:AppBarButton>
                </ui:CommandBar>
            </ui:CommandBar.Content>
            <ui:AppBarButton Label="Install" Icon="Accept" Click="ReplyInstall"/>
            <ui:AppBarButton Label="Cancel" Icon="Cancel" Click="ReplyCancel"/>
        </ui:CommandBar>

        <Grid Grid.RowSpan="3" Visibility="{Binding PreparingInstallableItems, Mode=OneWay, Converter={StaticResource boolToVisibility}}">
            <Rectangle Fill="{DynamicResource CommandBarBackground}" Opacity="0.8"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"/>
            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center">
                <ui:ProgressBar Height="12" Margin="5"
                                Value="{Binding PrepareProgress, Mode=OneWay}"
                                Maximum="{Binding PrepareTotal, Mode=OneWay}"/>
                <TextBlock Margin="5">
                    <Run Text="Preparing installable items list"/>
                    (<Run Text="{Binding PrepareProgress, Mode=OneWay}"/>/<Run Text="{Binding PrepareTotal, Mode=OneWay}"/>)
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
